<xml>
   <!-- Require Android 2.3+ -->
   <set name="PLATFORM" value="android-9" if="android" />
   <set name="PLATFORM" value="android-14" if="HXCPP_X86" />


   <include name="${HXCPP}/build-tool/BuildCommon.xml"/>
   <!-- 
      Build with:
         -Diphonesim              -> build i386 version
         -Diphoneos               -> build armv6
         -Diphoneos -DHXCPP_ARMV7 -> build armv7
         -Dandroid                -> build android armv5
         -Dandroid  -DHXCPP_ARMV7 -> build android armv7
         -Dandroid  -DHXCPP_X86   -> build android x86
         - no defines             -> build current OS
         -DHXCPP_M64              -> build current OS, 64 but version
         -Ddebug                  -> Used in combination with above for debug
   -->

   <!-- Where to find static libraries/includes -->
   <set name="NME_STATE" value="${haxelib:nme-state}" unless="NME_STATE" />
   


   <!--
      What SDL to use?
      For desktop, use version 2.
      For ios/android, not needed. 
      For rpi, and other systems, use installed 1.0
   -->
   <set name="NME_SDL_SYSTEM" value="1" if="rpi" />
   <set name="NME_SDL_SYSTEM" value="1" if="blackberry" />
   <set name="NME_SDL_SYSTEM" value="1" if="emscripten" />
   <set name="NME_SDL2" value="1" if="windows" />
   <set name="NME_SDL2" value="1" if="linux" unless="NME_SDL_SYSTEM" />
   <set name="NME_SDL2" value="1"  if="macos" />

   <set name="NME_SDL_ANY" value="1"  if="NME_SDL_SYSTEM" />
   <set name="NME_SDL_ANY" value="1"  if="NME_SDL2" />

   <!-- is already included in the distro -->
   <set name="NME_SDL_IMAGE" value="1" if="emscripten" />

   <!-- Use opengl backend ? -->
   <set name="NME_OGL" value="1" />
   <unset name="NME_OGL" if="winrt" />

   <!-- For systems that do not create the egl context for us -->
   <set name="NME_EGL" value="1" if="rpi"/>

   <!-- Do we need to implement curl in NME -->
   <set name="NME_CURL" value="1" />
   <unset name="NME_CURL" if="winrt" />
   <unset name="NME_CURL" if="emscripten" />

   <!-- And allow https ? -->
   <set name="NME_SSL" value="1" />
   <set name="NME_SSL_EXTRA" value="_ssl" if="NME_SSL"/>

 
   <!--
      What audio backend it use?
      For windows, linux, use SDL_mixer
      For ios/mac  use core audio + openal
      For android use java (todo - opensl?)
   -->

   
   
   <files id="main">
      <compilerflag value="-Iinclude"/>
      <file name="Test.cpp"/>
   </files>
   
   
   <files id="nme">
      <compilerflag value="-Iinclude"/>


      <section if="windows">
         <file name="windows/GDIFont.cpp"/>
         <file name="windows/System.cpp" />
      </section>

      <section if="linux">
         <compilerflag value="-Wno-conversion" if="linux"/>
         <file name="linux/NativeFont.cpp"/>
         <file name="linux/System.cpp"/>
      </section>

      <section if="macos">
         <compilerflag value="-Iinclude"/>
         <compilerflag value="-Iopenal"/>
         <file name="mac/NSFont.cpp"/>
         <file name="mac/MacBoot.m" />
         <file name="mac/System.mm"/>
         <file name="cocoa/FileManager.mm"/>
         <!-- <file name="openal/OpenALSound.cpp" /> -->
      </section>

      <section if="iphone">
         <file name="iPhone/UIStageView.mm"/>
         <file name="iPhone/UIDeviceHardware.mm"/>
         <!-- <file name="iPhone/SurfaceIO.mm"/> -->
         <file name="openal/OpenALSound.cpp" />
         <file name="common/Audio.cpp" />
         <file name="iPhone/Sound.mm"/>
         <file name="iPhone/NativeFont.mm"/>
         <file name="iPhone/System.mm"/>
         <file name="cocoa/FileManager.mm"/>
      </section>

      <section if="android">
         <file name="android/AndroidCommon.cpp" />
         <file name="android/AndroidSound.cpp"/>
         <file name="android/AndroidFont.cpp"/>
         <file name="android/AndroidFrame.cpp"/>
         <file name="android/JNI.cpp"/>
         <file name="android/System.cpp"/>
      </section>

      <section if="emscripten">
         <file name="linux/NativeFont.cpp"/>
         <file name="emscripten/System.cpp"/>
      </section>

      <section if="blackberry">
         <compilerflag value="-I${QNX_TARGET}/usr/include" if="blackberry"/>
         <compilerflag value="-I${QNX_TARGET}/usr/include/GLES2" if="blackberry"/>
         <file name="linux/NativeFont.cpp"/>
         <file name="blackberry/System.cpp"/>
      </section>

      <section if="rpi">
         <compilerflag value="-I/opt/vc/include" />
         <compilerflag value="-I/opt/vc/include/interface/vcos/pthreads/" />
      </section>


      <section if="NME_SDL_SYSTEM">
        <compilerflag value="-I/opt/local/include" if="macos" />
        <compilerflag value="-I/usr/include/SDL" if="linux" />
        <compilerflag value="-DDYNAMIC_SDL" />
        <compilerflag value="-DNME_MIXER" />
        <file name="sdl/SDLSound.cpp"/>
        <file name="sdl/SDLStage.cpp"/>
      </section>

      <section if="NME_SDL2">
        <compilerflag value="-I${NME_STATE}/include/SDL2" />
        <file name="sdl/SDLSound.cpp"/>
        <file name="sdl2/SDL2Stage.cpp"/>
        <compilerflag value="-DSDL_OGL" />
        <compilerflag value="-DNME_MIXER" />
        <compilerflag value="-DNME_SDL2" />
      </section>

      <section if="NME_CURL">
         <compilerflag value="-DNME_CURL_SSL" if="NME_SSL"/>
      </section>

      <section if="NME_OGL">
         <file name="opengl/OpenGLContext.cpp" />
         <file name="opengl/OGLTexture.cpp" />
         <file name="opengl/OGLShaders.cpp" />
         <file name="opengl/OGLExport.cpp" />
         <file name="opengl/Egl.cpp" if="nmeegl"/>
      </section>



      <compilerflag value="-Iinclude/xcompile" if="xcompile" />
      <compilerflag value="-I${NME_STATE}/include" />
      <compilerflag value="-D_7ZIP_ST" unless="windows"/>


      <file name="common/Surface.cpp"/>
      <file name="common/Utils.cpp"/>
      <file name="common/Geom.cpp"/>
      <file name="common/Graphics.cpp"/>
      <file name="common/GraphicsData.cpp"/>
      <file name="common/Matrix.cpp"/>
      <file name="common/CachedExtent.cpp"/>
      <file name="common/TextField.cpp"/>
      <file name="common/Font.cpp"/>
      <file name="common/FreeType.cpp" />
      <file name="common/Tilesheet.cpp"/>
      <file name="common/Display.cpp"/>
      <file name="common/ColorTransform.cpp"/>
      <file name="common/Hardware.cpp" unless="directfb"/>
      <file name="common/Tessellate.cpp"/>
      <file name="common/Filters.cpp"/>
      <file name="common/ExternalInterface.cpp"/>
      <file name="common/Cursors.cpp"/>
      <file name="common/Input.cpp" unless="iphone" />
      <file name="common/SurfaceIO.cpp" unless="sdl_image" />
      <file name="common/ManagedStage.cpp" unless="winrt" />
      <file name="common/CURL.cpp" unless="nocurl"/>
      <file name="common/Lzma.cpp"/>
      <file name="common/Thread.cpp"/>
      <!--<file name="common/Audio.cpp" if="openal"/>-->
      <file name="video/TheoraVideo.cpp" if="theora" />
      <file name="empty/Video.cpp" unless="theora" />
      
      <file name="common/XML/tinystr.cpp"/>
      <file name="common/XML/tinyxml.cpp"/>
      <file name="common/XML/tinyxmlerror.cpp"/>
      <file name="common/XML/tinyxmlparser.cpp"/>
      
      <file name="software-renderer/AlphaMask.cpp"/>
      <file name="software-renderer/BitmapFill.cpp"/>
      <file name="software-renderer/BitmapFillPerspective.cpp"/>
      <file name="software-renderer/GradientFill.cpp"/>
      <file name="software-renderer/LineRender.cpp"/>
      <file name="software-renderer/PointRenderer.cpp"/>
      <file name="software-renderer/PolygonRender.cpp"/>
      <file name="software-renderer/SoftwareRenderer.cpp"/>
      <file name="software-renderer/SolidFill.cpp"/>
      <file name="software-renderer/SolidRender.cpp"/>
      <file name="software-renderer/TileRenderer.cpp"/>
      <file name="software-renderer/TriangleRender.cpp"/>
     

   
      <file name="lzma/LzFind.c" />
      <file name="lzma/LzmaDec.c" />
      <file name="lzma/LzmaEnc.c" />
      <file name="lzma/LzFindMt.c" if="windows" />
      <file name="lzma/Threads.c" if="windows" />
   </files>
   

   <set name="NME_STATIC_LINK" value="1" if="iphone"/>
   <set name="NME_STATIC_LINK" value="1" if="emscripten"/>

   <set name="NME_LINKER" value="dll" />
   <set name="NME_LINKER" value="static_link" if="NME_STATIC_LINK" />

   <set name="SLIBEXT" value=".lib" if="windows"/>
   <set name="SLIBEXT" value=".a" unless="windows"/>
   <set name="PRELIB" value="${NME_STATE}/lib/${BINDIR}/lib" />
   <set name="POSTLIB" value="${LIBEXTRA}${SLIBEXT}" />




   <target id="NDLL" output="${LIBPREFIX}nme${LIBEXTRA}" tool="linker" toolid="${NME_LINKER}">

      <outdir name="../ndll/${BINDIR}" />
      <ext value=".ndll" unless="NME_STATIC_LINK"/>
      <ext value=".so" if="android"/>

      <flag value="-NODEFAULTLIB:LIBCMT" if="winrt"/>

      <files id="nme"/>


      <section unless="NME_STATIC_LINK">

         <!-- <lib name="${PRELIB}libfreetype${LIBEXTRA}${SLIBEXT}" if="iphone"/> -->
         <lib name="${PRELIB}freetype${POSTLIB}" />
         <lib name="${PRELIB}jpeg${POSTLIB}" />
         <lib name="${PRELIB}png${POSTLIB}" />

         

         <section if="NME_SDL2">
            <lib name="${PRELIB}SDL2${POSTLIB}" />
            <lib name="${PRELIB}SDL2_mixer${POSTLIB}" />
            <lib name="${PRELIB}SDL2${POSTLIB}" if="linux"/>
         </section>


         <section if="NME_SDL_SYSTEM">
            <lib name="-lSDL" />
            <lib name="-lcurl" />
            <lib name="-lpng" />
            <lib name="-ljpeg" />
            <lib name="-lfreetype" />
            <lib name="-lz" />
         </section>


         <section unless="NME_SDL_SYSTEM">
            <section if="NME_SDL2">
               <lib name="${PRELIB}vorbis${POSTLIB}" />
               <lib name="${PRELIB}ogg${POSTLIB}" />
               <lib name="${PRELIB}theora${POSTLIB}" />
            </section>

            <section if="NME_CURL">
               <lib name="${PRELIB}curl${NME_SSL_EXTRA}${POSTLIB}" />
            </section>

            <lib name="${PRELIB}freetype${POSTLIB}"/>
            <lib name="${PRELIB}jpeg${POSTLIB}" />
            <lib name="${PRELIB}png${POSTLIB}" />

            <lib name="${PRELIB}z${POSTLIB}" unless="android"/>
            <lib name="-lz" if="android"/>
         </section>

         <section if="macos">
            <vflag name="-framework" value="IOKit" />
            <vflag name="-framework" value="Foundation" />
            <!-- <vflag name="-framework" value="AVFoundation" if="macos"/> -->
            <vflag name="-framework" value="CoreAudio" />
            <vflag name="-framework" value="Carbon" />
            <vflag name="-framework" value="AudioToolbox" />
            <vflag name="-framework" value="AudioUnit" />
            <vflag name="-framework" value="ForceFeedback" />
            <vflag name="-framework" value="Cocoa" />
            <vflag name="-framework" value="OpenGL" />
            <vflag name="-framework" value="QuickTime" />
            <vflag name="-framework" value="AppKit" />
            <vflag name="-framework" value="OpenAL"/>
         </section>


         <section if="android">
            <lib name="-ldl" if="android"/>
            <lib name="-landroid" if="android"/>
            <lib name="-lGLESv2" if="android"/>
            <lib name="-lz" if="android"/>
         </section>

         <section if="blackberry">
           <lib name="-lSDL${LIBEXTRA}"/>
           <lib name="-lbps"/>
           <lib name="-lscreen" />
           <lib name="-lEGL" />
           <lib name="-lGLESv2" />
           <lib name="-lm" />
           <lib name="-lsocket"/>
         </section>
      
         <section if="rpi">
            <lib name="/opt/vc/lib/libGLESv2.so" />
            <lib name="/opt/vc/lib/libEGL.so" />
            <lib name="/opt/vc/lib/libbcm_host.so" />
         </section>
      
      
         <section if="windows">
            <lib name="gdi32.lib" />
            <lib name="opengl32.lib" />
            <lib name="user32.lib" />
            <lib name="kernel32.lib" />
            <lib name="advapi32.lib" />
            <lib name="support/windows/dxguid.lib"/>
            <lib name="winmm.lib" />
            <lib name="imm32.lib"  />
            <lib name="ole32.lib" />
            <lib name="oleaut32.lib" />
            <lib name="version.lib" />
            <lib name="ws2_32.lib"  />
            <lib name="wldap32.lib" />
            <lib name="shell32.lib" />
            <lib name="comdlg32.lib" />
         </section>

         <section if="linux">
            <lib name="-ldl" />
            <lib name="-Lsupport/linux64" if="HXCPP_M64"/>
            <lib name="-Lsupport/linux32" unless="HXCPP_M64"/>
            <lib name="-lGL" unless="rpi"/>
            <lib name="-lpthread" />
         </section>
      
         <section if="winrt">
            <lib name="D3D11.lib" />
         </section>
      
      </section>

   </target>
   
   
   <target id="default">
     <target id="NDLL"/>
   </target>
   
   
</xml>
