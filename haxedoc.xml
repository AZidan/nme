<haxe>
	<class path="Array" params="T" file="C:\Motion-Twin\haxe/std/Array.hx" extern="1">
		<length public="1" set="null">
			<c path="Int"/>
			<haxe_doc>
		The length of the Array
	</haxe_doc>
		</length>
		<concat public="1" set="method">
			<f a="a">
				<c path="Array"><c path="Array.T"/></c>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>
		Returns a new Array by appending [a] to [this].
	</haxe_doc>
		</concat>
		<join public="1" set="method">
			<f a="sep">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>
		Returns a representation of an array with [sep] for separating each element.
	</haxe_doc>
		</join>
		<pop public="1" set="method">
			<f a=""><t path="Null"><c path="Array.T"/></t></f>
			<haxe_doc>
		Removes the last element of the array and returns it.
	</haxe_doc>
		</pop>
		<push public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<c path="Int"/>
			</f>
			<haxe_doc>
		Adds the element [x] at the end of the array.
	</haxe_doc>
		</push>
		<reverse public="1" set="method">
			<f a=""><e path="Void"/></f>
			<haxe_doc>
		Reverse the order of elements of the Array.
	</haxe_doc>
		</reverse>
		<shift public="1" set="method">
			<f a=""><t path="Null"><c path="Array.T"/></t></f>
			<haxe_doc>
		Removes the first element and returns it.
	</haxe_doc>
		</shift>
		<slice public="1" set="method">
			<f a="pos:?end">
				<c path="Int"/>
				<c path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>
		Copies the range of the array starting at [pos] up to,
		but not including, [end]. Both [pos] and [end] can be
		negative to count from the end: -1 is the last item in
		the array.
	</haxe_doc>
		</slice>
		<sort public="1" set="method">
			<f a="f">
				<f a=":">
					<c path="Array.T"/>
					<c path="Array.T"/>
					<c path="Int"/>
				</f>
				<e path="Void"/>
			</f>
			<haxe_doc><![CDATA[
		Sort the Array according to the comparison function [f].
		[f(x,y)] should return [0] if [x == y], [>0] if [x > y]
		and [<0] if [x < y].
	]]></haxe_doc>
		</sort>
		<splice public="1" set="method">
			<f a="pos:len">
				<c path="Int"/>
				<c path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>
		Removes [len] elements starting from [pos] an returns them.
	</haxe_doc>
		</splice>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>
		Returns a displayable representation of the Array content.
	</haxe_doc>
		</toString>
		<unshift public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>
		Adds the element [x] at the start of the array.
	</haxe_doc>
		</unshift>
		<insert public="1" set="method">
			<f a="pos:x">
				<c path="Int"/>
				<c path="Array.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>
		Inserts the element [x] at the position [pos].
		All elements after [pos] are moved one index ahead.
	</haxe_doc>
		</insert>
		<remove public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>
		Removes the first occurence of [x].
		Returns false if [x] was not present.
		Elements are compared by using standard equality.
	</haxe_doc>
		</remove>
		<copy public="1" set="method">
			<f a=""><c path="Array"><c path="Array.T"/></c></f>
			<haxe_doc>
		Returns a copy of the Array. The values are not
		copied, only the Array structure.
	</haxe_doc>
		</copy>
		<iterator public="1" set="method">
			<f a=""><t path="Iterator"><t path="Null"><c path="Array.T"/></t></t></f>
			<haxe_doc>
		Returns an iterator of the Array values.
	</haxe_doc>
		</iterator>
		<new public="1" set="method">
			<f a=""><e path="Void"/></f>
			<haxe_doc>
		Creates a new Array.
	</haxe_doc>
		</new>
		<haxe_doc>
	An Array is a storage for values. You can access it using indexes or
	with its API. On the server side, it's often better to use a [List] which
	is less memory and CPU consuming, unless you really need indexed access.
</haxe_doc>
	</class>
	<class path="Class" params="T" file="C:\Motion-Twin\haxe/std/Class.hx" extern="1"><haxe_doc>
	An abstract type that represents a Class.
	See [Type] for the haXe Reflection API.
</haxe_doc></class>
	<class path="Hash" params="T" file="C:\Motion-Twin\haxe/std/cpp/_std/Hash.hx">
		<__Internal><d/></__Internal>
		<set public="1" set="method" line="33">
			<f a="key:value">
				<c path="String"/>
				<c path="Hash.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>
		Set a value for the given key.
	</haxe_doc>
		</set>
		<get public="1" set="method" line="37">
			<f a="key">
				<c path="String"/>
				<t path="Null"><c path="Hash.T"/></t>
			</f>
			<haxe_doc>
		Get a value for the given key.
	</haxe_doc>
		</get>
		<exists public="1" set="method" line="41">
			<f a="key">
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>
		Tells if a value exists for the given key.
		In particular, it's useful to tells if a key has
		a [null] value versus no value.
	</haxe_doc>
		</exists>
		<remove public="1" set="method" line="45">
			<f a="key">
				<c path="String"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>
		Removes a hashtable entry. Returns [true] if
		there was such entry.
	</haxe_doc>
		</remove>
		<keys public="1" set="method" line="52">
			<f a=""><t path="Iterator"><c path="String"/></t></f>
			<haxe_doc>
		Returns an iterator of all keys in the hashtable.
	</haxe_doc>
		</keys>
		<iterator public="1" set="method" line="61">
			<f a=""><t path="Iterator"><c path="Hash.T"/></t></f>
			<haxe_doc>
		Returns an iterator of all values in the hashtable.
	</haxe_doc>
		</iterator>
		<toString public="1" set="method" line="76">
			<f a=""><c path="String"/></f>
			<haxe_doc>
		Returns an displayable representation of the hashtable content.
	</haxe_doc>
		</toString>
		<new public="1" set="method" line="29">
			<f a=""><e path="Void"/></f>
			<haxe_doc>
		Creates a new empty hashtable.
	</haxe_doc>
		</new>
		<haxe_doc>
	Hashtable over a set of elements, using [String] as keys.
	Other kind of keys are not possible on all platforms since they
	can't always be implemented efficiently.
</haxe_doc>
	</class>
	<class path="IntHash" params="T" file="C:\Motion-Twin\haxe/std/cpp/_std/IntHash.hx">
		<h><d/></h>
		<set public="1" set="method" line="34">
			<f a="key:value">
				<c path="Int"/>
				<c path="IntHash.T"/>
				<e path="Void"/>
			</f>
			<haxe_doc>
		Set a value for the given key.
	</haxe_doc>
		</set>
		<get public="1" set="method" line="38">
			<f a="key">
				<c path="Int"/>
				<t path="Null"><c path="IntHash.T"/></t>
			</f>
			<haxe_doc>
		Get a value for the given key.
	</haxe_doc>
		</get>
		<exists public="1" set="method" line="42">
			<f a="key">
				<c path="Int"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>
		Tells if a value exists for the given key.
		In particular, it's useful to tells if a key has
		a [null] value versus no value.
	</haxe_doc>
		</exists>
		<remove public="1" set="method" line="46">
			<f a="key">
				<c path="Int"/>
				<e path="Bool"/>
			</f>
			<haxe_doc>
		Removes a hashtable entry. Returns [true] if
		there was such entry.
	</haxe_doc>
		</remove>
		<keys public="1" set="method" line="50">
			<f a=""><t path="Iterator"><c path="Int"/></t></f>
			<haxe_doc>
		Returns an iterator of all keys in the hashtable.
	</haxe_doc>
		</keys>
		<iterator public="1" set="method" line="55">
			<f a=""><t path="Iterator"><c path="IntHash.T"/></t></f>
			<haxe_doc>
		Returns an iterator of all values in the hashtable.
	</haxe_doc>
		</iterator>
		<toString public="1" set="method" line="60">
			<f a=""><c path="String"/></f>
			<haxe_doc>
		Returns an displayable representation of the hashtable content.
	</haxe_doc>
		</toString>
		<new public="1" set="method" line="30">
			<f a=""><e path="Void"/></f>
			<haxe_doc>
		Creates a new empty hashtable.
	</haxe_doc>
		</new>
		<haxe_doc>
	Hashtable over a set of elements, using [Int] as keys.
	On Flash and Javascript, the underlying structure is an Object.
</haxe_doc>
	</class>
	<class path="Std" params="" file="C:\Motion-Twin\haxe/std/cpp/_std/Std.hx">
		<is public="1" set="method" line="27" static="1">
			<f a="v:t">
				<d/>
				<d/>
				<e path="Bool"/>
			</f>
			<haxe_doc>
		Tells if a value v is of the type t.
	</haxe_doc>
		</is>
		<string public="1" set="method" line="31" static="1">
			<f a="s">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>
		Convert any value to a String
	</haxe_doc>
		</string>
		<int public="1" set="method" line="35" static="1">
			<f a="x">
				<c path="Float"/>
				<c path="Int"/>
			</f>
			<haxe_doc>
		Convert a Float to an Int, rounded down.
	</haxe_doc>
		</int>
		<parseInt public="1" set="method" line="39" static="1">
			<f a="x">
				<c path="String"/>
				<t path="Null"><c path="Int"/></t>
			</f>
			<haxe_doc>
		Convert a String to an Int, parsing different possible representations. Returns [null] if could not be parsed.
	</haxe_doc>
		</parseInt>
		<parseFloat public="1" set="method" line="43" static="1">
			<f a="x">
				<c path="String"/>
				<c path="Float"/>
			</f>
			<haxe_doc>
		Convert a String to a Float, parsing different possible reprensations.
	</haxe_doc>
		</parseFloat>
		<random public="1" set="method" line="47" static="1">
			<f a="x">
				<c path="Int"/>
				<c path="Int"/>
			</f>
			<haxe_doc>
		Return a random integer between 0 included and x excluded.
	</haxe_doc>
		</random>
		<haxe_doc>
	The Std class provides standard methods for manipulating basic types.
</haxe_doc>
	</class>
	<enum path="Void" params="" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes"><haxe_doc>
	The standard Void type. Only [null] values can be of the type [Void].
</haxe_doc></enum>
	<class path="Float" params="" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes" extern="1"><haxe_doc>
	The standard Float type, this is a double-precision IEEE 64bit float.
</haxe_doc></class>
	<class path="Int" params="" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes" extern="1">
		<extends path="Float"/>
		<haxe_doc>
	The standard Int type. Its precision depends on the platform.
</haxe_doc>
	</class>
	<typedef path="Null" params="T" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes">
		<c path="Null.T"/>
		<haxe_doc>
	[Null] can be useful in two cases. In order to document some methods
	that accepts or can return a [null] value, or for the Flash9 compiler and AS3
	generator to distinguish between base values that can be null and others that
	can't.
</haxe_doc>
	</typedef>
	<enum path="Bool" params="" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes">
		<true/>
		<false/>
		<haxe_doc>
	The standard Boolean type is represented as an enum with two choices.
</haxe_doc>
	</enum>
	<class path="Dynamic" params="T" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes" extern="1"><haxe_doc>
	Dynamic is an internal compiler type which has special behavior.
	See the haXe language reference for more informations.
</haxe_doc></class>
	<typedef path="Iterator" params="T" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes">
		<a>
			<next set="method"><f a=""><c path="Iterator.T"/></f></next>
			<hasNext set="method"><f a=""><e path="Bool"/></f></hasNext>
		</a>
		<haxe_doc>
	An Iterator is a structure that permits to list a given container
	values. It can be used by your own data structures. See the haXe
	documentation for more informations.
</haxe_doc>
	</typedef>
	<typedef path="Iterable" params="T" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes">
		<a><iterator set="method"><f a=""><t path="Iterator"><c path="Iterable.T"/></t></f></iterator></a>
		<haxe_doc>
	An Iterable is a data structure which has an iterator() method.
	See [Lambda] for generic functions on iterable structures.
</haxe_doc>
	</typedef>
	<class path="ArrayAccess" params="T" file="C:\Motion-Twin\haxe/std/StdTypes.hx" module="StdTypes" extern="1" interface="1"><haxe_doc>
	ArrayAccess is used to indicate a class that can be accessed using brackets.
	The type parameter represent the type of the elements stored.
</haxe_doc></class>
	<class path="String" params="" file="C:\Motion-Twin\haxe/std/String.hx" extern="1">
		<fromCharCode public="1" set="method" static="1"><f a="code">
	<c path="Int"/>
	<c path="String"/>
</f></fromCharCode>
		<length public="1" set="null">
			<c path="Int"/>
			<haxe_doc>
		The number of characters in the String.
	</haxe_doc>
		</length>
		<toUpperCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>
		Returns an String where all characters have been uppercased.
	</haxe_doc>
		</toUpperCase>
		<toLowerCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>
		Returns an String where all characters have been lowercased.
	</haxe_doc>
		</toLowerCase>
		<charAt public="1" set="method">
			<f a="index">
				<c path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>
		Returns the character at the given position.
		Returns the empty String if outside of String bounds.
	</haxe_doc>
		</charAt>
		<charCodeAt public="1" set="method">
			<f a="index">
				<c path="Int"/>
				<t path="Null"><c path="Int"/></t>
			</f>
			<haxe_doc>
		Returns the character code at the given position.
		Returns [null] if outside of String bounds.
	</haxe_doc>
		</charCodeAt>
		<indexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<c path="Int"/>
				<c path="Int"/>
			</f>
			<haxe_doc>
		Returns the index of first occurence of [value]
		Returns [1-1] if [value] is not found.
		The optional [startIndex] parameter allows you to specify at which character to start searching.
		The position returned is still relative to the beginning of the string.
	</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<c path="Int"/>
				<c path="Int"/>
			</f>
			<haxe_doc>
		Similar to [indexOf] but returns the latest index.
	</haxe_doc>
		</lastIndexOf>
		<split public="1" set="method">
			<f a="delimiter">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>
		Split the string using the specified delimiter.
	</haxe_doc>
		</split>
		<substr public="1" set="method">
			<f a="pos:?len">
				<c path="Int"/>
				<c path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>
		Returns a part of the String, taking [len] characters starting from [pos].
		If [len] is not specified, it takes all the remaining characters.
	</haxe_doc>
		</substr>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>
		Returns the String itself.
	</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="string">
				<c path="String"/>
				<e path="Void"/>
			</f>
			<haxe_doc>
		Creates a copy from a given String.
	</haxe_doc>
		</new>
		<haxe_doc>
	The basic String class.
</haxe_doc>
	</class>
	<class path="StringBuf" params="" file="C:\Motion-Twin\haxe/std/StringBuf.hx">
		<add public="1" get="inline" set="null" line="46">
			<f a="x">
				<d/>
				<e path="Void"/>
			</f>
			<haxe_doc>
		Adds the representation of any value to the string buffer.
	</haxe_doc>
		</add>
		<addSub public="1" get="inline" set="null" line="59">
			<f a="s:pos:?len">
				<c path="String"/>
				<c path="Int"/>
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>
		Adds a part of a string to the string buffer.
	</haxe_doc>
		</addSub>
		<addChar public="1" get="inline" set="null" line="75">
			<f a="c">
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>
		Adds a character to the string buffer.
	</haxe_doc>
		</addChar>
		<toString public="1" get="inline" set="null" line="89">
			<f a=""><c path="String"/></f>
			<haxe_doc>
		Returns the content of the string buffer.
		The buffer is not emptied by this operation.
	</haxe_doc>
		</toString>
		<b><c path="Array"><d/></c></b>
		<new public="1" set="method" line="35">
			<f a=""><e path="Void"/></f>
			<haxe_doc>
		Creates a new string buffer.
	</haxe_doc>
		</new>
		<haxe_doc>
	A String buffer is an efficient way to build a big string by
	appending small elements together.
</haxe_doc>
	</class>
	<typedef path="haxe.TimerList" params="" file="C:\Development\Haxe\nme/haxe/Timer.hx" module="haxe.Timer"><c path="Array"><c path="haxe.Timer"/></c></typedef>
	<class path="nme.Loader" params="" file="C:\Development\Haxe\nme/nme/Loader.hx" extern="1">
		<load public="1" set="method" static="1"><f a="func:args">
	<c path="String"/>
	<c path="Int"/>
	<d/>
</f></load>
		<loaderTrace public="1" set="method" static="1"><f a="inStr">
	<c path="String"/>
	<e path="Void"/>
</f></loaderTrace>
		<tryLoad public="1" set="method" static="1"><f a="inName:func:args">
	<c path="String"/>
	<c path="String"/>
	<c path="Int"/>
	<d/>
</f></tryLoad>
	</class>
	<class path="haxe.Timer" params="" file="C:\Development\Haxe\nme/haxe/Timer.hx">
		<sRunningTimers line="107" static="1"><t path="haxe.TimerList"/></sRunningTimers>
		<nmeNextWake public="1" set="method" line="147" static="1">
			<f a="limit">
				<c path="Float"/>
				<c path="Float"/>
			</f>
			<haxe_doc>
	 * @private
	 </haxe_doc>
		</nmeNextWake>
		<nmeCheckTimers public="1" set="method" line="189" static="1">
			<f a=""><e path="Void"/></f>
			<haxe_doc>
	 * @private
	 </haxe_doc>
		</nmeCheckTimers>
		<GetMS set="method" line="202" static="1"><f a=""><c path="Float"/></f></GetMS>
		<delay public="1" set="method" line="210" static="1"><f a="f:time">
	<f a=""><e path="Void"/></f>
	<c path="Int"/>
	<c path="haxe.Timer"/>
</f></delay>
		<stamp public="1" set="method" line="224" static="1"><f a=""><c path="Float"/></f></stamp>
		<nme_time_stamp line="231" static="1"><f a=""><c path="Float"/></f></nme_time_stamp>
		<mTime><c path="Float"/></mTime>
		<mFireAt><c path="Float"/></mFireAt>
		<mRunning><e path="Bool"/></mRunning>
		<run public="1" set="dynamic" line="125"><f a=""><e path="Void"/></f></run>
		<stop public="1" set="method" line="132"><f a=""><e path="Void"/></f></stop>
		<nmeCheck set="method" line="174"><f a="inTime">
	<c path="Float"/>
	<e path="Void"/>
</f></nmeCheck>
		<new public="1" set="method" line="114"><f a="time">
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.Assets" params="" file="C:\Development\Haxe\nme/nme/Assets.hx">
		<cachedBitmapData public="1" line="18" static="1"><c path="Hash"><c path="nme.display.BitmapData"/></c></cachedBitmapData>
		<getBitmapData public="1" set="method" line="28" static="1">
			<f a="id:?useCache">
				<c path="String"/>
				<e path="Bool"/>
				<c path="nme.display.BitmapData"/>
			</f>
			<haxe_doc>
	 * Gets an instance of an embedded bitmap
	 * @usage		var bitmap = new Bitmap (Assets.getBitmapData ("image.jpg"));
	 * @param	id		The ID or asset path for the bitmap
	 * @param	useCache		(Optional) Whether to use BitmapData from the cache (Default: true)
	 * @return		A new BItmapData object
	 </haxe_doc>
		</getBitmapData>
		<getBytes public="1" set="method" line="40" static="1">
			<f a="id">
				<c path="String"/>
				<c path="nme.utils.ByteArray"/>
			</f>
			<haxe_doc>
	 * Gets an instance of an embedded binary asset
	 * @usage		var bytes = Assets.getBytes ("file.zip");
	 * @param	id		The ID or asset path for the file
	 * @return		A new ByteArray object
	 </haxe_doc>
		</getBytes>
		<getFont public="1" set="method" line="52" static="1">
			<f a="id">
				<c path="String"/>
				<c path="nme.text.Font"/>
			</f>
			<haxe_doc>
	 * Gets an instance of an embedded font
	 * @usage		var fontName = Assets.getFont ("font.ttf").fontName;
	 * @param	id		The ID or asset path for the font
	 * @return		A new Font object
	 </haxe_doc>
		</getFont>
		<getSound public="1" set="method" line="64" static="1">
			<f a="id">
				<c path="String"/>
				<c path="nme.media.Sound"/>
			</f>
			<haxe_doc>
	 * Gets an instance of an embedded sound
	 * @usage		var sound = Assets.getSound ("sound.wav");
	 * @param	id		The ID or asset path for the sound
	 * @return		A new Sound object
	 </haxe_doc>
		</getSound>
		<getText public="1" set="method" line="76" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>
	 * Gets an instance of an embedded text asset
	 * @usage		var text = Assets.getText ("text.txt");
	 * @param	id		The ID or asset path for the file
	 * @return		A new String object
	 </haxe_doc>
		</getText>
		<haxe_doc>
 * Provides a cross-platform interface for accessing embedded assets
 * @author Joshua Granick
 </haxe_doc>
	</class>
	<class path="nme.JNI" params="" file="C:\Development\Haxe\nme/nme/JNI.hx" extern="1">
		<createMemberMethod public="1" set="method" static="1">
			<f a="className:memberName:signature:?useArray">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<e path="Bool"/>
				<d/>
			</f>
			<haxe_doc>
	 * Create bindings to an class instance method in Java
	 * @param	className		The name of the target class in Java
	 * @param	memberName		The name of the target method
	 * @param	signature		The JNI string-based type signature for the method
	 * @param	useArray		Whether the method should accept multiple parameters, or a single array with the parameters to pass to Java
	 * @return		A method that calls Java. The first parameter is a handle for the Java object instance, the rest are passed into the method as arguments
	 </haxe_doc>
		</createMemberMethod>
		<createStaticMethod public="1" set="method" static="1">
			<f a="className:memberName:signature:?useArray">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<e path="Bool"/>
				<d/>
			</f>
			<haxe_doc>
	 * Create bindings to a static class method in Java
	 * @param	className		The name of the target class in Java
	 * @param	memberName		The name of the target method
	 * @param	signature		The JNI string-based type signature for the method
	 * @param	useArray		Whether the method should accept multiple parameters, or a single array with the parameters to pass to Java
	 * @return		A method that calls Java. Each argument is passed into the Java method as arguments
	 </haxe_doc>
		</createStaticMethod>
	</class>
	<class path="nme.Lib" params="" file="C:\Development\Haxe\nme/nme/Lib.hx" extern="1">
		<FULLSCREEN public="1" static="1"><unknown/></FULLSCREEN>
		<BORDERLESS public="1" static="1"><unknown/></BORDERLESS>
		<RESIZABLE public="1" static="1"><unknown/></RESIZABLE>
		<HARDWARE public="1" static="1"><unknown/></HARDWARE>
		<VSYNC public="1" static="1"><unknown/></VSYNC>
		<HW_AA public="1" static="1"><unknown/></HW_AA>
		<HW_AA_HIRES public="1" static="1"><unknown/></HW_AA_HIRES>
		<current public="1" get="nmeGetCurrent" set="null" static="1"><c path="nme.display.MovieClip"/></current>
		<initHeight public="1" set="null" static="1"><c path="Int"/></initHeight>
		<initWidth public="1" set="null" static="1"><c path="Int"/></initWidth>
		<stage public="1" get="nmeGetStage" set="null" static="1"><c path="nme.display.Stage"/></stage>
		<company public="1" set="null" static="1"><c path="String"/></company>
		<version public="1" set="null" static="1"><c path="String"/></version>
		<packageName public="1" set="null" static="1"><c path="String"/></packageName>
		<file public="1" set="null" static="1"><c path="String"/></file>
		<close public="1" set="method" static="1"><f a=""><e path="Void"/></f></close>
		<create public="1" set="method" static="1"><f a="inOnLoaded:inWidth:inHeight:?inFrameRate:?inColour:?inFlags:?inTitle:?inIcon">
	<f a=""><e path="Void"/></f>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="String"/>
	<c path="nme.display.BitmapData"/>
	<e path="Void"/>
</f></create>
		<createManagedStage public="1" set="method" static="1"><f a="inWidth:inHeight">
	<c path="Int"/>
	<c path="Int"/>
	<c path="nme.display.ManagedStage"/>
</f></createManagedStage>
		<exit public="1" set="method" static="1"><f a=""><e path="Void"/></f></exit>
		<forceClose public="1" set="method" static="1"><f a=""><e path="Void"/></f></forceClose>
		<getTimer public="1" set="method" static="1"><f a=""><c path="Int"/></f></getTimer>
		<getURL public="1" set="method" static="1"><f a="url:?target">
	<c path="nme.net.URLRequest"/>
	<c path="String"/>
	<e path="Void"/>
</f></getURL>
		<postUICallback public="1" set="method" static="1"><f a="inCallback">
	<f a=""><e path="Void"/></f>
	<e path="Void"/>
</f></postUICallback>
		<setIcon public="1" set="method" static="1"><f a="path">
	<c path="String"/>
	<e path="Void"/>
</f></setIcon>
		<setPackage public="1" set="method" static="1"><f a="inCompany:inFile:inPack:inVersion">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></setPackage>
	</class>
	<class path="nme.Memory" params="" file="C:\Development\Haxe\nme/nme/Memory.hx" extern="1">
		<select public="1" set="method" static="1"><f a="inBytes">
	<c path="nme.utils.ByteArray"/>
	<e path="Void"/>
</f></select>
		<getByte public="1" set="method" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Int"/>
</f></getByte>
		<getDouble public="1" set="method" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Float"/>
</f></getDouble>
		<getFloat public="1" set="method" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Float"/>
</f></getFloat>
		<getI32 public="1" set="method" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Int"/>
</f></getI32>
		<getUI16 public="1" set="method" static="1"><f a="addr">
	<c path="Int"/>
	<c path="Int"/>
</f></getUI16>
		<setByte public="1" set="method" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setByte>
		<setDouble public="1" set="method" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setDouble>
		<setFloat public="1" set="method" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setFloat>
		<setI16 public="1" set="method" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setI16>
		<setI32 public="1" set="method" static="1"><f a="addr:v">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setI32>
	</class>
	<class path="nme.ObjectHash" params="T" file="C:\Development\Haxe\nme/nme/ObjectHash.hx">
		<nextObjectID line="22" static="1">
			<c path="Int"/>
			<haxe_doc> @private </haxe_doc>
		</nextObjectID>
		<hash>
			<c path="IntHash"><c path="nme.ObjectHash.T"/></c>
			<haxe_doc> @private </haxe_doc>
		</hash>
		<exists public="1" get="inline" set="null" line="40"><f a="key">
	<d/>
	<e path="Bool"/>
</f></exists>
		<get public="1" get="inline" set="null" line="55"><f a="key">
	<d/>
	<c path="nme.ObjectHash.T"/>
</f></get>
		<getID get="inline" set="null" line="70">
			<f a="key">
				<d/>
				<c path="Int"/>
			</f>
			<haxe_doc> @private </haxe_doc>
		</getID>
		<iterator public="1" get="inline" set="null" line="101"><f a=""><t path="Iterator"><c path="nme.ObjectHash.T"/></t></f></iterator>
		<remove public="1" get="inline" set="null" line="141"><f a="key">
	<d/>
	<e path="Void"/>
</f></remove>
		<set public="1" get="inline" set="null" line="156"><f a="key:value">
	<d/>
	<c path="nme.ObjectHash.T"/>
	<e path="Void"/>
</f></set>
		<new public="1" set="method" line="25"><f a=""><e path="Void"/></f></new>
	</class>
	<typedef path="nme.Vector" params="T" file="C:\Development\Haxe\nme/nme/Vector.hx"><c path="Array"><c path="nme.Vector.T"/></c></typedef>
	<class path="nme.VectorHelper" params="" file="C:\Development\Haxe\nme/nme/Vector.hx" module="nme.Vector"><ofArray public="1" params="T" get="inline" set="null" line="12" static="1"><f a="v:array">
	<c path="Class"><t path="nme.Vector"><d/></t></c>
	<c path="Array"><c path="ofArray.T"/></c>
	<t path="nme.Vector"><c path="ofArray.T"/></t>
</f></ofArray></class>
	<class path="nme.events.IEventDispatcher" params="" file="C:\Development\Haxe\nme/nme/events/IEventDispatcher.hx" extern="1" interface="1">
		<addEventListener public="1" set="method"><f a="type:listener:?useCapture:?priority:?useWeakReference">
	<c path="String"/>
	<f a="">
		<d/>
		<e path="Void"/>
	</f>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></addEventListener>
		<dispatchEvent public="1" set="method"><f a="event">
	<c path="nme.events.Event"/>
	<e path="Bool"/>
</f></dispatchEvent>
		<hasEventListener public="1" set="method"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></hasEventListener>
		<removeEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<f a="">
		<d/>
		<e path="Void"/>
	</f>
	<e path="Bool"/>
	<e path="Void"/>
</f></removeEventListener>
		<willTrigger public="1" set="method"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></willTrigger>
	</class>
	<class path="nme.events.EventDispatcher" params="" file="C:\Development\Haxe\nme/nme/events/EventDispatcher.hx" extern="1">
		<implements path="nme.events.IEventDispatcher"/>
		<addEventListener public="1" set="method"><f a="type:listener:?useCapture:?priority:?useWeakReference">
	<c path="String"/>
	<f a="">
		<d/>
		<e path="Void"/>
	</f>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></addEventListener>
		<dispatchEvent public="1" set="method"><f a="event">
	<c path="nme.events.Event"/>
	<e path="Bool"/>
</f></dispatchEvent>
		<hasEventListener public="1" set="method"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></hasEventListener>
		<removeEventListener public="1" set="method"><f a="type:listener:?useCapture">
	<c path="String"/>
	<f a="">
		<d/>
		<e path="Void"/>
	</f>
	<e path="Bool"/>
	<e path="Void"/>
</f></removeEventListener>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<willTrigger public="1" set="method"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></willTrigger>
		<new public="1" set="method"><f a="?target">
	<c path="nme.events.IEventDispatcher"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.display.IBitmapDrawable" params="" file="C:\Development\Haxe\nme/nme/display/IBitmapDrawable.hx" extern="1" interface="1"/>
	<class path="nme.display.DisplayObject" params="" file="C:\Development\Haxe\nme/nme/display/DisplayObject.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<implements path="nme.display.IBitmapDrawable"/>
		<alpha public="1"><c path="Float"/></alpha>
		<blendMode public="1"><e path="nme.display.BlendMode"/></blendMode>
		<cacheAsBitmap public="1"><e path="Bool"/></cacheAsBitmap>
		<filters public="1"><c path="Array"><d/></c></filters>
		<height public="1"><c path="Float"/></height>
		<loaderInfo public="1" set="null"><c path="nme.display.LoaderInfo"/></loaderInfo>
		<mask public="1"><c path="nme.display.DisplayObject"/></mask>
		<mouseX public="1" set="null"><c path="Float"/></mouseX>
		<mouseY public="1" set="null"><c path="Float"/></mouseY>
		<name public="1"><c path="String"/></name>
		<opaqueBackground public="1"><t path="Null"><c path="Int"/></t></opaqueBackground>
		<parent public="1" set="null"><c path="nme.display.DisplayObjectContainer"/></parent>
		<root public="1" set="null"><c path="nme.display.DisplayObject"/></root>
		<rotation public="1"><c path="Float"/></rotation>
		<rotationX public="1"><c path="Float"/></rotationX>
		<rotationY public="1"><c path="Float"/></rotationY>
		<rotationZ public="1"><c path="Float"/></rotationZ>
		<scale9Grid public="1"><c path="nme.geom.Rectangle"/></scale9Grid>
		<scaleX public="1"><c path="Float"/></scaleX>
		<scaleY public="1"><c path="Float"/></scaleY>
		<scaleZ public="1"><c path="Float"/></scaleZ>
		<scrollRect public="1"><c path="nme.geom.Rectangle"/></scrollRect>
		<stage public="1" set="null"><c path="nme.display.Stage"/></stage>
		<transform public="1"><c path="nme.geom.Transform"/></transform>
		<visible public="1"><e path="Bool"/></visible>
		<width public="1"><c path="Float"/></width>
		<x public="1"><c path="Float"/></x>
		<y public="1"><c path="Float"/></y>
		<z public="1"><c path="Float"/></z>
		<getBounds public="1" set="method"><f a="targetCoordinateSpace">
	<c path="nme.display.DisplayObject"/>
	<c path="nme.geom.Rectangle"/>
</f></getBounds>
		<getRect public="1" set="method"><f a="targetCoordinateSpace">
	<c path="nme.display.DisplayObject"/>
	<c path="nme.geom.Rectangle"/>
</f></getRect>
		<globalToLocal public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Point"/>
</f></globalToLocal>
		<globalToLocal3D public="1"><f a="point">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Vector3D"/>
</f></globalToLocal3D>
		<hitTestObject public="1" set="method"><f a="obj">
	<c path="nme.display.DisplayObject"/>
	<e path="Bool"/>
</f></hitTestObject>
		<hitTestPoint public="1" set="method"><f a="x:y:?shapeFlag">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Bool"/>
	<e path="Bool"/>
</f></hitTestPoint>
		<local3DToGlobal public="1"><f a="point3d">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Point"/>
</f></local3DToGlobal>
		<localToGlobal public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Point"/>
</f></localToGlobal>
	</class>
	<class path="nme.display.Bitmap" params="" file="C:\Development\Haxe\nme/nme/display/Bitmap.hx" extern="1">
		<extends path="nme.display.DisplayObject"/>
		<bitmapData public="1"><c path="nme.display.BitmapData"/></bitmapData>
		<pixelSnapping public="1"><e path="nme.display.PixelSnapping"/></pixelSnapping>
		<smoothing public="1"><e path="Bool"/></smoothing>
		<new public="1" set="method"><f a="?bitmapData:?pixelSnapping:?smoothing">
	<c path="nme.display.BitmapData"/>
	<e path="nme.display.PixelSnapping"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.display.BitmapData" params="" file="C:\Development\Haxe\nme/nme/display/BitmapData.hx" extern="1">
		<implements path="nme.display.IBitmapDrawable"/>
		<height public="1" set="null"><c path="Int"/></height>
		<rect public="1" set="null"><c path="nme.geom.Rectangle"/></rect>
		<transparent public="1" set="null"><e path="Bool"/></transparent>
		<width public="1" set="null"><c path="Int"/></width>
		<applyFilter public="1" set="method"><f a="sourceBitmapData:sourceRect:destPoint:filter">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Point"/>
	<c path="nme.filters.BitmapFilter"/>
	<e path="Void"/>
</f></applyFilter>
		<clone public="1" set="method"><f a=""><c path="nme.display.BitmapData"/></f></clone>
		<colorTransform public="1" set="method"><f a="rect:colorTransform">
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.ColorTransform"/>
	<e path="Void"/>
</f></colorTransform>
		<compare public="1" set="method"><f a="otherBitmapData">
	<c path="nme.display.BitmapData"/>
	<d/>
</f></compare>
		<copyChannel public="1" set="method"><f a="sourceBitmapData:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Point"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method"><f a="sourceBitmapData:sourceRect:destPoint:?alphaBitmapData:?alphaPoint:?mergeAlpha">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Point"/>
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Point"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></copyPixels>
		<dispose public="1" set="method"><f a=""><e path="Void"/></f></dispose>
		<draw public="1" set="method"><f a="source:?matrix:?colorTransform:?blendMode:?clipRect:?smoothing">
	<c path="nme.display.IBitmapDrawable"/>
	<c path="nme.geom.Matrix"/>
	<c path="nme.geom.ColorTransform"/>
	<e path="nme.display.BlendMode"/>
	<c path="nme.geom.Rectangle"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></draw>
		<fillRect public="1" set="method"><f a="rect:color">
	<c path="nme.geom.Rectangle"/>
	<c path="Int"/>
	<e path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method"><f a="x:y:color">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></floodFill>
		<generateFilterRect public="1" set="method"><f a="sourceRect:filter">
	<c path="nme.geom.Rectangle"/>
	<c path="nme.filters.BitmapFilter"/>
	<c path="nme.geom.Rectangle"/>
</f></generateFilterRect>
		<getColorBoundsRect public="1" set="method"><f a="mask:color:?findColor">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="nme.geom.Rectangle"/>
</f></getColorBoundsRect>
		<getPixel public="1" set="method"><f a="x:y">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method"><f a="x:y">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method"><f a="rect">
	<c path="nme.geom.Rectangle"/>
	<c path="nme.utils.ByteArray"/>
</f></getPixels>
		<getVector public="1"><f a="rect">
	<c path="nme.geom.Rectangle"/>
	<t path="nme.Vector"><c path="Int"/></t>
</f></getVector>
		<histogram public="1"><f a="?hRect">
	<c path="nme.geom.Rectangle"/>
	<t path="nme.Vector"><t path="nme.Vector"><c path="Float"/></t></t>
</f></histogram>
		<hitTest public="1" set="method"><f a="firstPoint:firstAlphaThreshold:secondObject:?secondBitmapDataPoint:?secondAlphaThreshold">
	<c path="nme.geom.Point"/>
	<c path="Int"/>
	<d/>
	<c path="nme.geom.Point"/>
	<c path="Int"/>
	<e path="Bool"/>
</f></hitTest>
		<lock public="1" set="method"><f a=""><e path="Void"/></f></lock>
		<merge public="1" set="method"><f a="sourceBitmapData:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Point"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></merge>
		<noise public="1" set="method"><f a="randomSeed:?low:?high:?channelOptions:?grayScale">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></noise>
		<paletteMap public="1" set="method"><f a="sourceBitmapData:sourceRect:destPoint:?redArray:?greenArray:?blueArray:?alphaArray">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Point"/>
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><c path="Int"/></c>
	<e path="Void"/>
</f></paletteMap>
		<perlinNoise public="1" set="method"><f a="baseX:baseY:numOctaves:randomSeed:stitch:fractalNoise:?channelOptions:?grayScale:?offsets">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Array"><c path="nme.geom.Point"/></c>
	<e path="Void"/>
</f></perlinNoise>
		<pixelDissolve public="1" set="method"><f a="sourceBitmapData:sourceRect:destPoint:?randomSeed:?numPixels:?fillColor">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Point"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
</f></pixelDissolve>
		<scroll public="1" set="method"><f a="x:y">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></scroll>
		<setPixel public="1" set="method"><f a="x:y:color">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method"><f a="x:y:color">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method"><f a="rect:inputByteArray">
	<c path="nme.geom.Rectangle"/>
	<c path="nme.utils.ByteArray"/>
	<e path="Void"/>
</f></setPixels>
		<setVector public="1"><f a="rect:inputVector">
	<c path="nme.geom.Rectangle"/>
	<t path="nme.Vector"><c path="Int"/></t>
	<e path="Void"/>
</f></setVector>
		<threshold public="1" set="method"><f a="sourceBitmapData:sourceRect:destPoint:operation:threshold:?color:?mask:?copySource">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Point"/>
	<c path="String"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Int"/>
</f></threshold>
		<unlock public="1" set="method"><f a="?changeRect">
	<c path="nme.geom.Rectangle"/>
	<e path="Void"/>
</f></unlock>
		<new public="1" set="method"><f a="width:height:?transparent:?fillColor">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.display.BitmapDataChannel" params="" file="C:\Development\Haxe\nme/nme/display/BitmapDataChannel.hx" extern="1">
		<ALPHA public="1" get="inline" set="null" line="6" static="1"><c path="Int"/></ALPHA>
		<BLUE public="1" get="inline" set="null" line="7" static="1"><c path="Int"/></BLUE>
		<GREEN public="1" get="inline" set="null" line="8" static="1"><c path="Int"/></GREEN>
		<RED public="1" get="inline" set="null" line="9" static="1"><c path="Int"/></RED>
	</class>
	<typedef path="nme.display.BitmapInt32" params="" file="C:\Development\Haxe\nme/nme/display/BitmapInt32.hx"><c path="Int"/></typedef>
	<enum path="nme.display.BlendMode" params="" file="C:\Development\Haxe\nme/nme/display/BlendMode.hx">
		<SUBTRACT/>
		<SHADER/>
		<SCREEN/>
		<OVERLAY/>
		<NORMAL/>
		<MULTIPLY/>
		<LIGHTEN/>
		<LAYER/>
		<INVERT/>
		<HARDLIGHT/>
		<ERASE/>
		<DIFFERENCE/>
		<DARKEN/>
		<ALPHA/>
		<ADD/>
	</enum>
	<enum path="nme.display.CapsStyle" params="" file="C:\Development\Haxe\nme/nme/display/CapsStyle.hx">
		<SQUARE/>
		<ROUND/>
		<NONE/>
	</enum>
	<class path="nme.display.InteractiveObject" params="" file="C:\Development\Haxe\nme/nme/display/InteractiveObject.hx" extern="1">
		<extends path="nme.display.DisplayObject"/>
		<doubleClickEnabled public="1"><e path="Bool"/></doubleClickEnabled>
		<focusRect public="1"><d/></focusRect>
		<mouseEnabled public="1"><e path="Bool"/></mouseEnabled>
		<needsSoftKeyboard public="1"><e path="Bool"/></needsSoftKeyboard>
		<softKeyboardInputAreaOfInterest public="1"><c path="nme.geom.Rectangle"/></softKeyboardInputAreaOfInterest>
		<tabEnabled public="1"><e path="Bool"/></tabEnabled>
		<tabIndex public="1"><c path="Int"/></tabIndex>
		<requestSoftKeyboard public="1"><f a=""><e path="Bool"/></f></requestSoftKeyboard>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.display.DisplayObjectContainer" params="" file="C:\Development\Haxe\nme/nme/display/DisplayObjectContainer.hx" extern="1">
		<extends path="nme.display.InteractiveObject"/>
		<mouseChildren public="1"><e path="Bool"/></mouseChildren>
		<numChildren public="1" set="null"><c path="Int"/></numChildren>
		<tabChildren public="1"><e path="Bool"/></tabChildren>
		<addChild public="1" set="method"><f a="child">
	<c path="nme.display.DisplayObject"/>
	<c path="nme.display.DisplayObject"/>
</f></addChild>
		<addChildAt public="1" set="method"><f a="child:index">
	<c path="nme.display.DisplayObject"/>
	<c path="Int"/>
	<c path="nme.display.DisplayObject"/>
</f></addChildAt>
		<areInaccessibleObjectsUnderPoint public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<e path="Bool"/>
</f></areInaccessibleObjectsUnderPoint>
		<contains public="1" set="method"><f a="child">
	<c path="nme.display.DisplayObject"/>
	<e path="Bool"/>
</f></contains>
		<getChildAt public="1" set="method"><f a="index">
	<c path="Int"/>
	<c path="nme.display.DisplayObject"/>
</f></getChildAt>
		<getChildByName public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="nme.display.DisplayObject"/>
</f></getChildByName>
		<getChildIndex public="1" set="method"><f a="child">
	<c path="nme.display.DisplayObject"/>
	<c path="Int"/>
</f></getChildIndex>
		<getObjectsUnderPoint public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<c path="Array"><c path="nme.display.DisplayObject"/></c>
</f></getObjectsUnderPoint>
		<removeChild public="1" set="method"><f a="child">
	<c path="nme.display.DisplayObject"/>
	<c path="nme.display.DisplayObject"/>
</f></removeChild>
		<removeChildAt public="1" set="method"><f a="index">
	<c path="Int"/>
	<c path="nme.display.DisplayObject"/>
</f></removeChildAt>
		<removeChildren public="1"><f a="?beginIndex:?endIndex">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></removeChildren>
		<setChildIndex public="1" set="method"><f a="child:index">
	<c path="nme.display.DisplayObject"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setChildIndex>
		<swapChildren public="1" set="method"><f a="child1:child2">
	<c path="nme.display.DisplayObject"/>
	<c path="nme.display.DisplayObject"/>
	<e path="Void"/>
</f></swapChildren>
		<swapChildrenAt public="1" set="method"><f a="index1:index2">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></swapChildrenAt>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.text.TextField" params="" file="C:\Development\Haxe\nme/nme/text/TextField.hx" extern="1">
		<extends path="nme.display.InteractiveObject"/>
		<isFontCompatible public="1" static="1"><f a="fontName:fontStyle">
	<c path="String"/>
	<c path="String"/>
	<e path="Bool"/>
</f></isFontCompatible>
		<alwaysShowSelection public="1"><e path="Bool"/></alwaysShowSelection>
		<antiAliasType public="1"><e path="nme.text.AntiAliasType"/></antiAliasType>
		<autoSize public="1"><e path="nme.text.TextFieldAutoSize"/></autoSize>
		<background public="1"><e path="Bool"/></background>
		<backgroundColor public="1"><c path="Int"/></backgroundColor>
		<border public="1"><e path="Bool"/></border>
		<borderColor public="1"><c path="Int"/></borderColor>
		<bottomScrollV public="1" set="null"><c path="Int"/></bottomScrollV>
		<caretIndex public="1" set="null"><c path="Int"/></caretIndex>
		<condenseWhite public="1"><e path="Bool"/></condenseWhite>
		<defaultTextFormat public="1"><c path="nme.text.TextFormat"/></defaultTextFormat>
		<displayAsPassword public="1"><e path="Bool"/></displayAsPassword>
		<embedFonts public="1"><e path="Bool"/></embedFonts>
		<htmlText public="1"><c path="String"/></htmlText>
		<length public="1" set="null"><c path="Int"/></length>
		<maxChars public="1"><c path="Int"/></maxChars>
		<maxScrollH public="1" set="null"><c path="Int"/></maxScrollH>
		<maxScrollV public="1" set="null"><c path="Int"/></maxScrollV>
		<mouseWheelEnabled public="1"><e path="Bool"/></mouseWheelEnabled>
		<multiline public="1"><e path="Bool"/></multiline>
		<numLines public="1" set="null"><c path="Int"/></numLines>
		<restrict public="1"><c path="String"/></restrict>
		<scrollH public="1"><c path="Int"/></scrollH>
		<scrollV public="1"><c path="Int"/></scrollV>
		<selectable public="1"><e path="Bool"/></selectable>
		<selectedText public="1" set="null"><c path="String"/></selectedText>
		<selectionBeginIndex public="1" set="null"><c path="Int"/></selectionBeginIndex>
		<selectionEndIndex public="1" set="null"><c path="Int"/></selectionEndIndex>
		<sharpness public="1"><c path="Float"/></sharpness>
		<text public="1"><c path="String"/></text>
		<textColor public="1"><c path="Int"/></textColor>
		<textHeight public="1" set="null"><c path="Float"/></textHeight>
		<textWidth public="1" set="null"><c path="Float"/></textWidth>
		<thickness public="1"><c path="Float"/></thickness>
		<type public="1"><e path="nme.text.TextFieldType"/></type>
		<useRichTextClipboard public="1"><e path="Bool"/></useRichTextClipboard>
		<wordWrap public="1"><e path="Bool"/></wordWrap>
		<appendText public="1" set="method"><f a="newText">
	<c path="String"/>
	<e path="Void"/>
</f></appendText>
		<copyRichText public="1" set="method"><f a=""><c path="String"/></f></copyRichText>
		<getCharBoundaries public="1" set="method"><f a="charIndex">
	<c path="Int"/>
	<c path="nme.geom.Rectangle"/>
</f></getCharBoundaries>
		<getCharIndexAtPoint public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
</f></getCharIndexAtPoint>
		<getFirstCharInParagraph public="1" set="method"><f a="charIndex">
	<c path="Int"/>
	<c path="Int"/>
</f></getFirstCharInParagraph>
		<getImageReference public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="nme.display.DisplayObject"/>
</f></getImageReference>
		<getLineIndexAtPoint public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
</f></getLineIndexAtPoint>
		<getLineIndexOfChar public="1" set="method"><f a="charIndex">
	<c path="Int"/>
	<c path="Int"/>
</f></getLineIndexOfChar>
		<getLineLength public="1" set="method"><f a="lineIndex">
	<c path="Int"/>
	<c path="Int"/>
</f></getLineLength>
		<getLineOffset public="1" set="method"><f a="lineIndex">
	<c path="Int"/>
	<c path="Int"/>
</f></getLineOffset>
		<getLineText public="1" set="method"><f a="lineIndex">
	<c path="Int"/>
	<c path="String"/>
</f></getLineText>
		<getParagraphLength public="1" set="method"><f a="charIndex">
	<c path="Int"/>
	<c path="Int"/>
</f></getParagraphLength>
		<getRawText public="1" set="method"><f a=""><c path="String"/></f></getRawText>
		<getTextFormat public="1" set="method"><f a="?beginIndex:?endIndex">
	<c path="Int"/>
	<c path="Int"/>
	<c path="nme.text.TextFormat"/>
</f></getTextFormat>
		<getTextRuns public="1" set="method"><f a="?beginIndex:?endIndex">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Array"><d/></c>
</f></getTextRuns>
		<getXMLText public="1" set="method"><f a="?beginIndex:?endIndex">
	<c path="Int"/>
	<c path="Int"/>
	<c path="String"/>
</f></getXMLText>
		<insertXMLText public="1" set="method"><f a="beginIndex:endIndex:richText:?pasting">
	<c path="Int"/>
	<c path="Int"/>
	<c path="String"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></insertXMLText>
		<pasteRichText public="1" set="method"><f a="richText">
	<c path="String"/>
	<e path="Bool"/>
</f></pasteRichText>
		<replaceSelectedText public="1" set="method"><f a="value">
	<c path="String"/>
	<e path="Void"/>
</f></replaceSelectedText>
		<replaceText public="1" set="method"><f a="beginIndex:endIndex:newText">
	<c path="Int"/>
	<c path="Int"/>
	<c path="String"/>
	<e path="Void"/>
</f></replaceText>
		<setSelection public="1" set="method"><f a="beginIndex:endIndex">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setSelection>
		<setTextFormat public="1" set="method"><f a="format:?beginIndex:?endIndex">
	<c path="nme.text.TextFormat"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></setTextFormat>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.display.FPS" params="" file="C:\Development\Haxe\nme/nme/display/FPS.hx">
		<extends path="nme.text.TextField"/>
		<times><c path="Array"><c path="Float"/></c></times>
		<onEnter set="method" line="38"><f a="_">
	<unknown/>
	<e path="Void"/>
</f></onEnter>
		<new public="1" set="method" line="16"><f a="?inX:?inY:?inCol">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.display.GradientType" params="" file="C:\Development\Haxe\nme/nme/display/GradientType.hx">
		<RADIAL/>
		<LINEAR/>
	</enum>
	<class path="nme.display.Graphics" params="" file="C:\Development\Haxe\nme/nme/display/Graphics.hx" extern="1">
		<beginBitmapFill public="1" set="method"><f a="bitmap:?matrix:?repeat:?smooth">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Matrix"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></beginBitmapFill>
		<beginFill public="1" set="method"><f a="color:?alpha">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></beginFill>
		<beginGradientFill public="1" set="method"><f a="type:colors:alphas:ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio">
	<e path="nme.display.GradientType"/>
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="nme.geom.Matrix"/>
	<e path="nme.display.SpreadMethod"/>
	<e path="nme.display.InterpolationMethod"/>
	<c path="Float"/>
	<e path="Void"/>
</f></beginGradientFill>
		<clear public="1" set="method"><f a=""><e path="Void"/></f></clear>
		<copyFrom public="1"><f a="sourceGraphics">
	<c path="nme.display.Graphics"/>
	<e path="Void"/>
</f></copyFrom>
		<cubicCurveTo public="1"><f a="controlX1:controlY1:controlX2:controlY2:anchorX:anchorY">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></cubicCurveTo>
		<curveTo public="1" set="method"><f a="controlX:controlY:anchorX:anchorY">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></curveTo>
		<drawCircle public="1" set="method"><f a="x:y:radius">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawCircle>
		<drawEllipse public="1" set="method"><f a="x:y:width:height">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawEllipse>
		<drawGraphicsData public="1"><f a="graphicsData">
	<t path="nme.Vector"><c path="nme.display.IGraphicsData"/></t>
	<e path="Void"/>
</f></drawGraphicsData>
		<drawPath public="1"><f a="commands:data:?winding">
	<t path="nme.Vector"><c path="Int"/></t>
	<t path="nme.Vector"><c path="Float"/></t>
	<e path="nme.display.GraphicsPathWinding"/>
	<e path="Void"/>
</f></drawPath>
		<drawRect public="1" set="method"><f a="x:y:width:height">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawRect>
		<drawRoundRect public="1" set="method"><f a="x:y:width:height:ellipseWidth:?ellipseHeight">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawRoundRect>
		<drawRoundRectComplex public="1" set="method"><f a="x:y:width:height:topLeftRadius:topRightRadius:bottomLeftRadius:bottomRightRadius">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></drawRoundRectComplex>
		<drawTriangles public="1"><f a="vertices:?indices:?uvtData:?culling">
	<t path="nme.Vector"><c path="Float"/></t>
	<t path="nme.Vector"><c path="Int"/></t>
	<t path="nme.Vector"><c path="Float"/></t>
	<e path="nme.display.TriangleCulling"/>
	<e path="Void"/>
</f></drawTriangles>
		<endFill public="1" set="method"><f a=""><e path="Void"/></f></endFill>
		<lineBitmapStyle public="1"><f a="bitmap:?matrix:?repeat:?smooth">
	<c path="nme.display.BitmapData"/>
	<c path="nme.geom.Matrix"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></lineBitmapStyle>
		<lineGradientStyle public="1" set="method"><f a="type:colors:alphas:ratios:?matrix:?spreadMethod:?interpolationMethod:?focalPointRatio">
	<e path="nme.display.GradientType"/>
	<c path="Array"><c path="Int"/></c>
	<c path="Array"><d/></c>
	<c path="Array"><d/></c>
	<c path="nme.geom.Matrix"/>
	<e path="nme.display.SpreadMethod"/>
	<e path="nme.display.InterpolationMethod"/>
	<c path="Float"/>
	<e path="Void"/>
</f></lineGradientStyle>
		<lineStyle public="1" set="method"><f a="?thickness:?color:?alpha:?pixelHinting:?scaleMode:?caps:?joints:?miterLimit">
	<c path="Float"/>
	<c path="Int"/>
	<c path="Float"/>
	<e path="Bool"/>
	<e path="nme.display.LineScaleMode"/>
	<e path="nme.display.CapsStyle"/>
	<e path="nme.display.JointStyle"/>
	<c path="Float"/>
	<e path="Void"/>
</f></lineStyle>
		<lineTo public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></lineTo>
		<moveTo public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></moveTo>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.display.IGraphicsData" params="" file="C:\Development\Haxe\nme/nme/display/IGraphicsData.hx" extern="1" interface="1"/>
	<class path="nme.display.GraphicsEndFill" params="" file="C:\Development\Haxe\nme/nme/display/GraphicsEndFill.hx" extern="1">
		<implements path="nme.display.IGraphicsData"/>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.display.GraphicsPath" params="" file="C:\Development\Haxe\nme/nme/display/GraphicsPath.hx" extern="1">
		<implements path="nme.display.IGraphicsData"/>
		<commands public="1"><t path="nme.Vector"><c path="Int"/></t></commands>
		<data public="1"><t path="nme.Vector"><c path="Float"/></t></data>
		<winding public="1"><e path="nme.display.GraphicsPathWinding"/></winding>
		<cubicCurveTo public="1"><f a="controlX1:controlY1:controlX2:controlY2:anchorX:anchorY">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></cubicCurveTo>
		<curveTo public="1" set="method"><f a="controlX:controlY:anchorX:anchorY">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></curveTo>
		<lineTo public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></lineTo>
		<moveTo public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></moveTo>
		<wideLineTo public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></wideLineTo>
		<wideMoveTo public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></wideMoveTo>
		<new public="1" set="method"><f a="?commands:?data:?winding">
	<t path="nme.Vector"><c path="Int"/></t>
	<t path="nme.Vector"><c path="Float"/></t>
	<e path="nme.display.GraphicsPathWinding"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.display.GraphicsPathWinding" params="" file="C:\Development\Haxe\nme/nme/display/GraphicsPathWinding.hx">
		<NON_ZERO/>
		<EVEN_ODD/>
	</enum>
	<class path="nme.display.GraphicsSolidFill" params="" file="C:\Development\Haxe\nme/nme/display/GraphicsSolidFill.hx" extern="1">
		<implements path="nme.display.IGraphicsData"/>
		<alpha public="1"><c path="Float"/></alpha>
		<color public="1"><c path="Int"/></color>
		<new public="1" set="method"><f a="?color:?alpha">
	<c path="Int"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.display.GraphicsStroke" params="" file="C:\Development\Haxe\nme/nme/display/GraphicsStroke.hx" extern="1">
		<implements path="nme.display.IGraphicsData"/>
		<caps public="1"><e path="nme.display.CapsStyle"/></caps>
		<joints public="1"><e path="nme.display.JointStyle"/></joints>
		<miterLimit public="1"><c path="Float"/></miterLimit>
		<pixelHinting public="1"><e path="Bool"/></pixelHinting>
		<scaleMode public="1"><e path="nme.display.LineScaleMode"/></scaleMode>
		<thickness public="1"><c path="Float"/></thickness>
		<new public="1" set="method"><f a="?thickness:?pixelHinting:?scaleMode:?caps:?joints:?miterLimit">
	<c path="Float"/>
	<e path="Bool"/>
	<e path="nme.display.LineScaleMode"/>
	<e path="nme.display.CapsStyle"/>
	<e path="nme.display.JointStyle"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.display.InterpolationMethod" params="" file="C:\Development\Haxe\nme/nme/display/InterpolationMethod.hx">
		<RGB/>
		<LINEAR_RGB/>
	</enum>
	<enum path="nme.display.JointStyle" params="" file="C:\Development\Haxe\nme/nme/display/JointStyle.hx">
		<ROUND/>
		<MITER/>
		<BEVEL/>
	</enum>
	<enum path="nme.display.LineScaleMode" params="" file="C:\Development\Haxe\nme/nme/display/LineScaleMode.hx">
		<VERTICAL/>
		<NORMAL/>
		<NONE/>
		<HORIZONTAL/>
	</enum>
	<class path="nme.display.Loader" params="" file="C:\Development\Haxe\nme/nme/display/Loader.hx" extern="1">
		<extends path="nme.display.DisplayObjectContainer"/>
		<content public="1" set="null"><c path="nme.display.DisplayObject"/></content>
		<contentLoaderInfo public="1" set="null"><c path="nme.display.LoaderInfo"/></contentLoaderInfo>
		<close public="1" set="method"><f a=""><e path="Void"/></f></close>
		<load public="1" set="method"><f a="request">
	<c path="nme.net.URLRequest"/>
	<e path="Void"/>
</f></load>
		<loadBytes public="1" set="method"><f a="bytes">
	<c path="nme.utils.ByteArray"/>
	<e path="Void"/>
</f></loadBytes>
		<unload public="1" set="method"><f a=""><e path="Void"/></f></unload>
		<unloadAndStop public="1"><f a="?gc">
	<e path="Bool"/>
	<e path="Void"/>
</f></unloadAndStop>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.display.LoaderInfo" params="" file="C:\Development\Haxe\nme/nme/display/LoaderInfo.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<getLoaderInfoByDefinition public="1" set="method" static="1"><f a="object">
	<d/>
	<c path="nme.display.LoaderInfo"/>
</f></getLoaderInfoByDefinition>
		<bytes public="1" set="null"><c path="nme.utils.ByteArray"/></bytes>
		<bytesLoaded public="1" set="null"><c path="Int"/></bytesLoaded>
		<bytesTotal public="1" set="null"><c path="Int"/></bytesTotal>
		<childAllowsParent public="1" set="null"><e path="Bool"/></childAllowsParent>
		<content public="1" set="null"><c path="nme.display.DisplayObject"/></content>
		<contentType public="1" set="null"><c path="String"/></contentType>
		<frameRate public="1" set="null"><c path="Float"/></frameRate>
		<height public="1" set="null"><c path="Int"/></height>
		<isURLInaccessible public="1"><e path="Bool"/></isURLInaccessible>
		<loader public="1" set="null"><c path="nme.display.Loader"/></loader>
		<loaderURL public="1" set="null"><c path="String"/></loaderURL>
		<parameters public="1" set="null"><d><c path="String"/></d></parameters>
		<parentAllowsChild public="1" set="null"><e path="Bool"/></parentAllowsChild>
		<sameDomain public="1" set="null"><e path="Bool"/></sameDomain>
		<sharedEvents public="1" set="null"><c path="nme.events.EventDispatcher"/></sharedEvents>
		<swfVersion public="1" set="null"><c path="Int"/></swfVersion>
		<url public="1" set="null"><c path="String"/></url>
		<width public="1" set="null"><c path="Int"/></width>
	</class>
	<class path="nme.display.Stage" params="" file="C:\Development\Haxe\nme/nme/display/Stage.hx" extern="1">
		<extends path="nme.display.DisplayObjectContainer"/>
		<align public="1"><e path="nme.display.StageAlign"/></align>
		<allowsFullScreen public="1"><e path="Bool"/></allowsFullScreen>
		<color public="1"><c path="Int"/></color>
		<displayContextInfo public="1"><c path="String"/></displayContextInfo>
		<displayState public="1"><e path="nme.display.StageDisplayState"/></displayState>
		<focus public="1"><c path="nme.display.InteractiveObject"/></focus>
		<frameRate public="1"><c path="Float"/></frameRate>
		<fullScreenHeight public="1" set="null"><c path="Int"/></fullScreenHeight>
		<fullScreenSourceRect public="1"><c path="nme.geom.Rectangle"/></fullScreenSourceRect>
		<fullScreenWidth public="1" set="null"><c path="Int"/></fullScreenWidth>
		<quality public="1"><e path="nme.display.StageQuality"/></quality>
		<scaleMode public="1"><e path="nme.display.StageScaleMode"/></scaleMode>
		<showDefaultContextMenu public="1"><e path="Bool"/></showDefaultContextMenu>
		<softKeyboardRect public="1"><c path="nme.geom.Rectangle"/></softKeyboardRect>
		<stageFocusRect public="1"><e path="Bool"/></stageFocusRect>
		<stageHeight public="1"><c path="Int"/></stageHeight>
		<stageWidth public="1"><c path="Int"/></stageWidth>
		<wmodeGPU public="1"><e path="Bool"/></wmodeGPU>
		<invalidate public="1" set="method"><f a=""><e path="Void"/></f></invalidate>
		<isFocusInaccessible public="1" set="method"><f a=""><e path="Bool"/></f></isFocusInaccessible>
	</class>
	<class path="nme.display.ManagedStage" params="" file="C:\Development\Haxe\nme/nme/display/ManagedStage.hx" extern="1">
		<extends path="nme.display.Stage"/>
		<etUnknown public="1" static="1"><c path="Int"/></etUnknown>
		<etKeyDown public="1" static="1"><c path="Int"/></etKeyDown>
		<etChar public="1" static="1"><c path="Int"/></etChar>
		<etKeyUp public="1" static="1"><c path="Int"/></etKeyUp>
		<etMouseMove public="1" static="1"><c path="Int"/></etMouseMove>
		<etMouseDown public="1" static="1"><c path="Int"/></etMouseDown>
		<etMouseClick public="1" static="1"><c path="Int"/></etMouseClick>
		<etMouseUp public="1" static="1"><c path="Int"/></etMouseUp>
		<etResize public="1" static="1"><c path="Int"/></etResize>
		<etPoll public="1" static="1"><c path="Int"/></etPoll>
		<etQuit public="1" static="1"><c path="Int"/></etQuit>
		<etFocus public="1" static="1"><c path="Int"/></etFocus>
		<etShouldRotate public="1" static="1"><c path="Int"/></etShouldRotate>
		<etDestroyHandler public="1" static="1"><c path="Int"/></etDestroyHandler>
		<etRedraw public="1" static="1"><c path="Int"/></etRedraw>
		<etTouchBegin public="1" static="1"><c path="Int"/></etTouchBegin>
		<etTouchMove public="1" static="1"><c path="Int"/></etTouchMove>
		<etTouchEnd public="1" static="1"><c path="Int"/></etTouchEnd>
		<etTouchTap public="1" static="1"><c path="Int"/></etTouchTap>
		<etChange public="1" static="1"><c path="Int"/></etChange>
		<efLeftDown public="1" static="1"><c path="Int"/></efLeftDown>
		<efShiftDown public="1" static="1"><c path="Int"/></efShiftDown>
		<efCtrlDown public="1" static="1"><c path="Int"/></efCtrlDown>
		<efAltDown public="1" static="1"><c path="Int"/></efAltDown>
		<efCommandDown public="1" static="1"><c path="Int"/></efCommandDown>
		<efMiddleDown public="1" static="1"><c path="Int"/></efMiddleDown>
		<efRightDown public="1" static="1"><c path="Int"/></efRightDown>
		<efLocationRight public="1" static="1"><c path="Int"/></efLocationRight>
		<efPrimaryTouch public="1" static="1"><c path="Int"/></efPrimaryTouch>
		<beginRender public="1" set="dynamic"><f a=""><e path="Void"/></f></beginRender>
		<endRender public="1" set="dynamic"><f a=""><e path="Void"/></f></endRender>
		<pumpEvent public="1" set="method"><f a="inEvent">
	<d/>
	<e path="Void"/>
</f></pumpEvent>
		<resize public="1" set="method"><f a="inWidth:inHeight">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></resize>
		<sendQuit public="1" set="method"><f a=""><e path="Void"/></f></sendQuit>
		<setNextWake public="1" set="dynamic"><f a="inDelay">
	<c path="Float"/>
	<e path="Void"/>
</f></setNextWake>
		<new public="1" set="method"><f a="inWidth:inHeight">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.display.Sprite" params="" file="C:\Development\Haxe\nme/nme/display/Sprite.hx" extern="1">
		<extends path="nme.display.DisplayObjectContainer"/>
		<buttonMode public="1"><e path="Bool"/></buttonMode>
		<dropTarget public="1" set="null"><c path="nme.display.DisplayObject"/></dropTarget>
		<graphics public="1" set="null"><c path="nme.display.Graphics"/></graphics>
		<hitArea public="1"><c path="nme.display.Sprite"/></hitArea>
		<soundTransform public="1"><c path="nme.media.SoundTransform"/></soundTransform>
		<useHandCursor public="1"><e path="Bool"/></useHandCursor>
		<startDrag public="1" set="method"><f a="?lockCenter:?bounds">
	<e path="Bool"/>
	<c path="nme.geom.Rectangle"/>
	<e path="Void"/>
</f></startDrag>
		<startTouchDrag public="1"><f a="touchPointID:?lockCenter:?bounds">
	<c path="Int"/>
	<e path="Bool"/>
	<c path="nme.geom.Rectangle"/>
	<e path="Void"/>
</f></startTouchDrag>
		<stopDrag public="1" set="method"><f a=""><e path="Void"/></f></stopDrag>
		<stopTouchDrag public="1"><f a="touchPointID">
	<c path="Int"/>
	<e path="Void"/>
</f></stopTouchDrag>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.display.MovieClip" params="" file="C:\Development\Haxe\nme/nme/display/MovieClip.hx" extern="1">
		<extends path="nme.display.Sprite"/>
		<currentFrame public="1" set="null"><c path="Int"/></currentFrame>
		<currentFrameLabel public="1"><c path="String"/></currentFrameLabel>
		<currentLabel public="1" set="null"><c path="String"/></currentLabel>
		<enabled public="1"><e path="Bool"/></enabled>
		<framesLoaded public="1" set="null"><c path="Int"/></framesLoaded>
		<isPlaying public="1"><e path="Bool"/></isPlaying>
		<totalFrames public="1" set="null"><c path="Int"/></totalFrames>
		<trackAsMenu public="1"><e path="Bool"/></trackAsMenu>
		<addFrameScript public="1" set="method"><f a="?p1:?p2:?p3:?p4:?p5">
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<e path="Void"/>
</f></addFrameScript>
		<gotoAndPlay public="1" set="method"><f a="frame:?scene">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></gotoAndPlay>
		<gotoAndStop public="1" set="method"><f a="frame:?scene">
	<d/>
	<c path="String"/>
	<e path="Void"/>
</f></gotoAndStop>
		<nextFrame public="1" set="method"><f a=""><e path="Void"/></f></nextFrame>
		<nextScene public="1" set="method"><f a=""><e path="Void"/></f></nextScene>
		<play public="1" set="method"><f a=""><e path="Void"/></f></play>
		<prevFrame public="1" set="method"><f a=""><e path="Void"/></f></prevFrame>
		<prevScene public="1" set="method"><f a=""><e path="Void"/></f></prevScene>
		<stop public="1" set="method"><f a=""><e path="Void"/></f></stop>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<enum path="nme.display.PixelSnapping" params="" file="C:\Development\Haxe\nme/nme/display/PixelSnapping.hx">
		<NEVER/>
		<AUTO/>
		<ALWAYS/>
	</enum>
	<class path="nme.display.Shape" params="" file="C:\Development\Haxe\nme/nme/display/Shape.hx" extern="1">
		<extends path="nme.display.DisplayObject"/>
		<graphics public="1" set="null"><c path="nme.display.Graphics"/></graphics>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.display.SimpleButton" params="" file="C:\Development\Haxe\nme/nme/display/SimpleButton.hx" extern="1">
		<extends path="nme.display.InteractiveObject"/>
		<downState public="1"><c path="nme.display.DisplayObject"/></downState>
		<enabled public="1"><e path="Bool"/></enabled>
		<hitTestState public="1"><c path="nme.display.DisplayObject"/></hitTestState>
		<overState public="1"><c path="nme.display.DisplayObject"/></overState>
		<soundTransform public="1"><c path="nme.media.SoundTransform"/></soundTransform>
		<trackAsMenu public="1"><e path="Bool"/></trackAsMenu>
		<upState public="1"><c path="nme.display.DisplayObject"/></upState>
		<useHandCursor public="1"><e path="Bool"/></useHandCursor>
		<new public="1" set="method"><f a="?upState:?overState:?downState:?hitTestState">
	<c path="nme.display.DisplayObject"/>
	<c path="nme.display.DisplayObject"/>
	<c path="nme.display.DisplayObject"/>
	<c path="nme.display.DisplayObject"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.display.SpreadMethod" params="" file="C:\Development\Haxe\nme/nme/display/SpreadMethod.hx">
		<REPEAT/>
		<REFLECT/>
		<PAD/>
	</enum>
	<enum path="nme.display.StageAlign" params="" file="C:\Development\Haxe\nme/nme/display/StageAlign.hx">
		<TOP_RIGHT/>
		<TOP_LEFT/>
		<TOP/>
		<RIGHT/>
		<LEFT/>
		<BOTTOM_RIGHT/>
		<BOTTOM_LEFT/>
		<BOTTOM/>
	</enum>
	<enum path="nme.display.StageDisplayState" params="" file="C:\Development\Haxe\nme/nme/display/StageDisplayState.hx">
		<NORMAL/>
		<FULL_SCREEN_INTERACTIVE/>
		<FULL_SCREEN/>
	</enum>
	<enum path="nme.display.StageQuality" params="" file="C:\Development\Haxe\nme/nme/display/StageQuality.hx">
		<MEDIUM/>
		<LOW/>
		<HIGH/>
		<BEST/>
	</enum>
	<enum path="nme.display.StageScaleMode" params="" file="C:\Development\Haxe\nme/nme/display/StageScaleMode.hx">
		<SHOW_ALL/>
		<NO_SCALE/>
		<NO_BORDER/>
		<EXACT_FIT/>
	</enum>
	<class path="nme.display.Tilesheet" params="" file="C:\Development\Haxe\nme/nme/display/Tilesheet.hx" extern="1">
		<TILE_SCALE public="1" static="1"><c path="Int"/></TILE_SCALE>
		<TILE_ROTATION public="1" static="1"><c path="Int"/></TILE_ROTATION>
		<TILE_RGB public="1" static="1"><c path="Int"/></TILE_RGB>
		<TILE_ALPHA public="1" static="1"><c path="Int"/></TILE_ALPHA>
		<TILE_BLEND_NORMAL public="1" static="1"><c path="Int"/></TILE_BLEND_NORMAL>
		<TILE_BLEND_ADD public="1" static="1"><c path="Int"/></TILE_BLEND_ADD>
		<addTileRect public="1" set="method"><f a="rectangle:?centerPoint">
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Point"/>
	<e path="Void"/>
</f></addTileRect>
		<drawTiles public="1" set="method">
			<f a="graphics:tileData:?smooth:?flags">
				<c path="nme.display.Graphics"/>
				<c path="Array"><c path="Float"/></c>
				<e path="Bool"/>
				<c path="Int"/>
				<e path="Void"/>
			</f>
			<haxe_doc>
	 * Fast method to draw a batch of tiles using a Tilesheet
	 * 
	 * The input array accepts the x, y and tile ID for each tile you wish to draw.
	 * For example, an array of [ 0, 0, 0, 10, 10, 1 ] would draw tile 0 to (0, 0) and
	 * tile 1 to (10, 10)
	 * 
	 * You can also set flags for TILE_SCALE, TILE_ROTATION, TILE_RGB and
	 * TILE_ALPHA.
	 * 
	 * Depending on which flags are active, this is the full order of the array:
	 * 
	 * [ x, y, tile ID, scale, rotation, red, green, blue, alpha, x, y ... ]
	 * 
	 * @param	graphics		The nme.display.Graphics object to use for drawing
	 * @param	tileData		An array of all position, ID and optional values for use in drawing
	 * @param	smooth		(Optional) Whether drawn tiles should be smoothed (Default: false)
	 * @param	flags		(Optional) Flags to enable scale, rotation, RGB and/or alpha when drawing (Default: 0)
	 </haxe_doc>
		</drawTiles>
		<new public="1" set="method"><f a="inImage">
	<c path="nme.display.BitmapData"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.display.TriangleCulling" params="" file="C:\Development\Haxe\nme/nme/display/TriangleCulling.hx">
		<POSITIVE/>
		<NONE/>
		<NEGATIVE/>
	</enum>
	<class path="nme.errors.Error" params="" file="C:\Development\Haxe\nme/nme/errors/Error.hx" extern="1">
		<length public="1" static="1"><c path="Int"/></length>
		<getErrorMessage public="1" set="method" static="1"><f a="index">
	<c path="Int"/>
	<c path="String"/>
</f></getErrorMessage>
		<throwError public="1" set="method" static="1"><f a="type:index:?p1:?p2:?p3:?p4:?p5">
	<c path="Class"><d/></c>
	<c path="Int"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
</f></throwError>
		<errorID public="1" set="null"><c path="Int"/></errorID>
		<message public="1"><d/></message>
		<name public="1"><d/></name>
		<getStackTrace public="1" set="method"><f a=""><c path="String"/></f></getStackTrace>
		<new public="1" set="method"><f a="?message:?id">
	<d/>
	<d/>
	<e path="Void"/>
</f></new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="nme.errors.ArgumentError" params="" file="C:\Development\Haxe\nme/nme/errors/ArgumentError.hx" extern="1"><extends path="nme.errors.Error"/></class>
	<class path="nme.errors.EOFError" params="" file="C:\Development\Haxe\nme/nme/errors/EOFError.hx" extern="1"><new public="1" set="method"><f a="?message:?id">
	<c path="String"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new></class>
	<class path="nme.errors.IllegalOperationError" params="" file="C:\Development\Haxe\nme/nme/errors/IllegalOperationError.hx" extern="1">
		<extends path="nme.errors.Error"/>
		<new public="1" set="method"><f a="?message:?id">
	<c path="String"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.errors.RangeError" params="" file="C:\Development\Haxe\nme/nme/errors/RangeError.hx" extern="1"><extends path="nme.errors.Error"/></class>
	<class path="nme.errors.SecurityError" params="" file="C:\Development\Haxe\nme/nme/errors/SecurityError.hx" extern="1"><extends path="nme.errors.Error"/></class>
	<class path="nme.errors.TypeError" params="" file="C:\Development\Haxe\nme/nme/errors/TypeError.hx" extern="1"><extends path="nme.errors.Error"/></class>
	<class path="nme.events.Event" params="" file="C:\Development\Haxe\nme/nme/events/Event.hx" extern="1">
		<ACTIVATE public="1" static="1"><c path="String"/></ACTIVATE>
		<ADDED public="1" static="1"><c path="String"/></ADDED>
		<ADDED_TO_STAGE public="1" static="1"><c path="String"/></ADDED_TO_STAGE>
		<CANCEL public="1" static="1"><c path="String"/></CANCEL>
		<CHANGE public="1" static="1"><c path="String"/></CHANGE>
		<CLEAR public="1" static="1"><c path="String"/></CLEAR>
		<CLOSE public="1" static="1"><c path="String"/></CLOSE>
		<COMPLETE public="1" static="1"><c path="String"/></COMPLETE>
		<CONNECT public="1" static="1"><c path="String"/></CONNECT>
		<CONTEXT3D_CREATE public="1" static="1"><c path="String"/></CONTEXT3D_CREATE>
		<COPY public="1" static="1"><c path="String"/></COPY>
		<CUT public="1" static="1"><c path="String"/></CUT>
		<DEACTIVATE public="1" static="1"><c path="String"/></DEACTIVATE>
		<ENTER_FRAME public="1" static="1"><c path="String"/></ENTER_FRAME>
		<EXIT_FRAME public="1" static="1"><c path="String"/></EXIT_FRAME>
		<FRAME_CONSTRUCTED public="1" static="1"><c path="String"/></FRAME_CONSTRUCTED>
		<FULLSCREEN public="1" static="1"><c path="String"/></FULLSCREEN>
		<ID3 public="1" static="1"><c path="String"/></ID3>
		<INIT public="1" static="1"><c path="String"/></INIT>
		<MOUSE_LEAVE public="1" static="1"><c path="String"/></MOUSE_LEAVE>
		<OPEN public="1" static="1"><c path="String"/></OPEN>
		<PASTE public="1" static="1"><c path="String"/></PASTE>
		<REMOVED public="1" static="1"><c path="String"/></REMOVED>
		<REMOVED_FROM_STAGE public="1" static="1"><c path="String"/></REMOVED_FROM_STAGE>
		<RENDER public="1" static="1"><c path="String"/></RENDER>
		<RESIZE public="1" static="1"><c path="String"/></RESIZE>
		<SCROLL public="1" static="1"><c path="String"/></SCROLL>
		<SELECT public="1" static="1"><c path="String"/></SELECT>
		<SELECT_ALL public="1" static="1"><c path="String"/></SELECT_ALL>
		<SOUND_COMPLETE public="1" static="1"><c path="String"/></SOUND_COMPLETE>
		<TAB_CHILDREN_CHANGE public="1" static="1"><c path="String"/></TAB_CHILDREN_CHANGE>
		<TAB_ENABLED_CHANGE public="1" static="1"><c path="String"/></TAB_ENABLED_CHANGE>
		<TAB_INDEX_CHANGE public="1" static="1"><c path="String"/></TAB_INDEX_CHANGE>
		<TEXT_INTERACTION_MODE_CHANGE public="1" static="1"><c path="String"/></TEXT_INTERACTION_MODE_CHANGE>
		<UNLOAD public="1" static="1"><c path="String"/></UNLOAD>
		<bubbles public="1" set="null"><e path="Bool"/></bubbles>
		<cancelable public="1" set="null"><e path="Bool"/></cancelable>
		<currentTarget public="1" set="null"><d/></currentTarget>
		<eventPhase public="1" set="null"><e path="nme.events.EventPhase"/></eventPhase>
		<target public="1" set="null"><d/></target>
		<type public="1" set="null"><c path="String"/></type>
		<clone public="1" set="method"><f a=""><c path="nme.events.Event"/></f></clone>
		<formatToString public="1" set="method"><f a="className:?p1:?p2:?p3:?p4:?p5">
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<c path="String"/>
</f></formatToString>
		<isDefaultPrevented public="1" set="method"><f a=""><e path="Bool"/></f></isDefaultPrevented>
		<preventDefault public="1" set="method"><f a=""><e path="Void"/></f></preventDefault>
		<stopImmediatePropagation public="1" set="method"><f a=""><e path="Void"/></f></stopImmediatePropagation>
		<stopPropagation public="1" set="method"><f a=""><e path="Void"/></f></stopPropagation>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.AccelerometerEvent" params="" file="C:\Development\Haxe\nme/nme/events/AccelerometerEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<UPDATE public="1" static="1"><c path="String"/></UPDATE>
		<accelerationX public="1"><c path="Float"/></accelerationX>
		<accelerationY public="1"><c path="Float"/></accelerationY>
		<accelerationZ public="1"><c path="Float"/></accelerationZ>
		<timestamp public="1"><c path="Float"/></timestamp>
		<new public="1"><f a="type:?bubbles:?cancelable:?timestamp:?accelerationX:?accelerationY:?accelerationZ">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.TextEvent" params="" file="C:\Development\Haxe\nme/nme/events/TextEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<LINK public="1" static="1"><c path="String"/></LINK>
		<TEXT_INPUT public="1" static="1"><c path="String"/></TEXT_INPUT>
		<text public="1"><c path="String"/></text>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?text">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.ErrorEvent" params="" file="C:\Development\Haxe\nme/nme/events/ErrorEvent.hx" extern="1">
		<extends path="nme.events.TextEvent"/>
		<ERROR public="1" static="1"><c path="String"/></ERROR>
		<errorID public="1"><c path="Int"/></errorID>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?text:?id">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.events.EventPhase" params="" file="C:\Development\Haxe\nme/nme/events/EventPhase.hx">
		<CAPTURING_PHASE/>
		<BUBBLING_PHASE/>
		<AT_TARGET/>
	</enum>
	<class path="nme.events.FocusEvent" params="" file="C:\Development\Haxe\nme/nme/events/FocusEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<FOCUS_IN public="1" static="1"><c path="String"/></FOCUS_IN>
		<FOCUS_OUT public="1" static="1"><c path="String"/></FOCUS_OUT>
		<KEY_FOCUS_CHANGE public="1" static="1"><c path="String"/></KEY_FOCUS_CHANGE>
		<MOUSE_FOCUS_CHANGE public="1" static="1"><c path="String"/></MOUSE_FOCUS_CHANGE>
		<isRelatedObjectInaccessible public="1"><e path="Bool"/></isRelatedObjectInaccessible>
		<keyCode public="1"><c path="Int"/></keyCode>
		<relatedObject public="1"><c path="nme.display.InteractiveObject"/></relatedObject>
		<shiftKey public="1"><e path="Bool"/></shiftKey>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?relatedObject:?shiftKey:?keyCode">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="nme.display.InteractiveObject"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.IOErrorEvent" params="" file="C:\Development\Haxe\nme/nme/events/IOErrorEvent.hx" extern="1">
		<extends path="nme.events.ErrorEvent"/>
		<DISK_ERROR public="1" static="1"><c path="String"/></DISK_ERROR>
		<IO_ERROR public="1" static="1"><c path="String"/></IO_ERROR>
		<NETWORK_ERROR public="1" static="1"><c path="String"/></NETWORK_ERROR>
		<VERIFY_ERROR public="1" static="1"><c path="String"/></VERIFY_ERROR>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?text:?id">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.JoystickEvent" params="" file="C:\Development\Haxe\nme/nme/events/JoystickEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<AXIS_MOVE public="1" static="1"><c path="String"/></AXIS_MOVE>
		<BALL_MOVE public="1" static="1"><c path="String"/></BALL_MOVE>
		<BUTTON_DOWN public="1" static="1"><c path="String"/></BUTTON_DOWN>
		<BUTTON_UP public="1" static="1"><c path="String"/></BUTTON_UP>
		<HAT_MOVE public="1" static="1"><c path="String"/></HAT_MOVE>
		<device public="1"><c path="Int"/></device>
		<id public="1"><c path="Int"/></id>
		<x public="1"><c path="Float"/></x>
		<y public="1"><c path="Float"/></y>
		<z public="1"><c path="Float"/></z>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?device:?id:?x:?y:?z">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.KeyboardEvent" params="" file="C:\Development\Haxe\nme/nme/events/KeyboardEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<KEY_DOWN public="1" static="1"><c path="String"/></KEY_DOWN>
		<KEY_UP public="1" static="1"><c path="String"/></KEY_UP>
		<altKey public="1"><e path="Bool"/></altKey>
		<charCode public="1"><c path="Int"/></charCode>
		<ctrlKey public="1"><e path="Bool"/></ctrlKey>
		<keyCode public="1"><c path="Int"/></keyCode>
		<shiftKey public="1"><e path="Bool"/></shiftKey>
		<updateAfterEvent public="1" set="method"><f a=""><e path="Void"/></f></updateAfterEvent>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?charCodeValue:?keyCodeValue">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.MouseEvent" params="" file="C:\Development\Haxe\nme/nme/events/MouseEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<CLICK public="1" static="1"><c path="String"/></CLICK>
		<DOUBLE_CLICK public="1" static="1"><c path="String"/></DOUBLE_CLICK>
		<MOUSE_DOWN public="1" static="1"><c path="String"/></MOUSE_DOWN>
		<MOUSE_MOVE public="1" static="1"><c path="String"/></MOUSE_MOVE>
		<MOUSE_OUT public="1" static="1"><c path="String"/></MOUSE_OUT>
		<MOUSE_OVER public="1" static="1"><c path="String"/></MOUSE_OVER>
		<MOUSE_UP public="1" static="1"><c path="String"/></MOUSE_UP>
		<MOUSE_WHEEL public="1" static="1"><c path="String"/></MOUSE_WHEEL>
		<ROLL_OUT public="1" static="1"><c path="String"/></ROLL_OUT>
		<ROLL_OVER public="1" static="1"><c path="String"/></ROLL_OVER>
		<altKey public="1"><e path="Bool"/></altKey>
		<buttonDown public="1"><e path="Bool"/></buttonDown>
		<ctrlKey public="1"><e path="Bool"/></ctrlKey>
		<delta public="1"><c path="Int"/></delta>
		<isRelatedObjectInaccessible public="1"><e path="Bool"/></isRelatedObjectInaccessible>
		<localX public="1"><c path="Float"/></localX>
		<localY public="1"><c path="Float"/></localY>
		<relatedObject public="1"><c path="nme.display.InteractiveObject"/></relatedObject>
		<shiftKey public="1"><e path="Bool"/></shiftKey>
		<stageX public="1" set="null"><c path="Float"/></stageX>
		<stageY public="1" set="null"><c path="Float"/></stageY>
		<updateAfterEvent public="1" set="method"><f a=""><e path="Void"/></f></updateAfterEvent>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?localX:?localY:?relatedObject:?ctrlKey:?altKey:?shiftKey:?buttonDown:?delta">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="nme.display.InteractiveObject"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.ProgressEvent" params="" file="C:\Development\Haxe\nme/nme/events/ProgressEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<PROGRESS public="1" static="1"><c path="String"/></PROGRESS>
		<SOCKET_DATA public="1" static="1"><c path="String"/></SOCKET_DATA>
		<bytesLoaded public="1"><c path="Float"/></bytesLoaded>
		<bytesTotal public="1"><c path="Float"/></bytesTotal>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?bytesLoaded:?bytesTotal">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.SecurityErrorEvent" params="" file="C:\Development\Haxe\nme/nme/events/SecurityErrorEvent.hx" extern="1">
		<extends path="nme.events.ErrorEvent"/>
		<SECURITY_ERROR public="1" static="1"><c path="String"/></SECURITY_ERROR>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable:?text:?id">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.TimerEvent" params="" file="C:\Development\Haxe\nme/nme/events/TimerEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<TIMER public="1" static="1"><c path="String"/></TIMER>
		<TIMER_COMPLETE public="1" static="1"><c path="String"/></TIMER_COMPLETE>
		<updateAfterEvent public="1" set="method"><f a=""><e path="Void"/></f></updateAfterEvent>
		<new public="1" set="method"><f a="type:?bubbles:?cancelable">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.events.TouchEvent" params="" file="C:\Development\Haxe\nme/nme/events/TouchEvent.hx" extern="1">
		<extends path="nme.events.Event"/>
		<TOUCH_BEGIN public="1" static="1"><c path="String"/></TOUCH_BEGIN>
		<TOUCH_END public="1" static="1"><c path="String"/></TOUCH_END>
		<TOUCH_MOVE public="1" static="1"><c path="String"/></TOUCH_MOVE>
		<TOUCH_OUT public="1" static="1"><c path="String"/></TOUCH_OUT>
		<TOUCH_OVER public="1" static="1"><c path="String"/></TOUCH_OVER>
		<TOUCH_ROLL_OUT public="1" static="1"><c path="String"/></TOUCH_ROLL_OUT>
		<TOUCH_ROLL_OVER public="1" static="1"><c path="String"/></TOUCH_ROLL_OVER>
		<TOUCH_TAP public="1" static="1"><c path="String"/></TOUCH_TAP>
		<altKey public="1"><e path="Bool"/></altKey>
		<ctrlKey public="1"><e path="Bool"/></ctrlKey>
		<isPrimaryTouchPoint public="1"><e path="Bool"/></isPrimaryTouchPoint>
		<isRelatedObjectInaccessible public="1"><e path="Bool"/></isRelatedObjectInaccessible>
		<localX public="1"><c path="Float"/></localX>
		<localY public="1"><c path="Float"/></localY>
		<pressure public="1"><c path="Float"/></pressure>
		<relatedObject public="1"><c path="nme.display.InteractiveObject"/></relatedObject>
		<shiftKey public="1"><e path="Bool"/></shiftKey>
		<sizeX public="1"><c path="Float"/></sizeX>
		<sizeY public="1"><c path="Float"/></sizeY>
		<stageX public="1" set="null"><c path="Float"/></stageX>
		<stageY public="1" set="null"><c path="Float"/></stageY>
		<touchPointID public="1"><c path="Int"/></touchPointID>
		<updateAfterEvent public="1" set="method"><f a=""><e path="Void"/></f></updateAfterEvent>
		<new public="1"><f a="type:?bubbles:?cancelable:?touchPointID:?isPrimaryTouchPoint:?localX:?localY:?sizeX:?sizeY:?pressure:?relatedObject:?ctrlKey:?altKey:?shiftKey">
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="Int"/>
	<e path="Bool"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="nme.display.InteractiveObject"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.external.ExternalInterface" params="" file="C:\Development\Haxe\nme/nme/external/ExternalInterface.hx" extern="1">
		<available public="1" set="null" static="1"><e path="Bool"/></available>
		<marshallExceptions public="1" static="1"><e path="Bool"/></marshallExceptions>
		<objectID public="1" set="null" static="1"><c path="String"/></objectID>
		<addCallback public="1" set="method" static="1"><f a="functionName:closure">
	<c path="String"/>
	<d/>
	<e path="Void"/>
</f></addCallback>
		<call public="1" set="method" static="1"><f a="functionName:?p1:?p2:?p3:?p4:?p5">
	<c path="String"/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
	<d/>
</f></call>
	</class>
	<class path="nme.feedback.Haptic" params="" file="C:\Development\Haxe\nme/nme/feedback/Haptic.hx" extern="1"><vibrate public="1" set="method" static="1"><f a="?period:?duration">
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></vibrate></class>
	<class path="nme.filesystem.File" params="" file="C:\Development\Haxe\nme/nme/filesystem/File.hx" extern="1">
		<applicationDirectory public="1" get="nmeGetAppDir" set="null" static="1"><c path="nme.filesystem.File"/></applicationDirectory>
		<applicationStorageDirectory public="1" get="nmeGetStorageDir" set="null" static="1"><c path="nme.filesystem.File"/></applicationStorageDirectory>
		<desktopDirectory public="1" get="nmeGetDesktopDir" set="null" static="1"><c path="nme.filesystem.File"/></desktopDirectory>
		<documentsDirectory public="1" get="nmeGetDocsDir" set="null" static="1"><c path="nme.filesystem.File"/></documentsDirectory>
		<userDirectory public="1" get="nmeGetUserDir" set="null" static="1"><c path="nme.filesystem.File"/></userDirectory>
		<nativePath public="1" set="nmeSetNativePath"><c path="String"/></nativePath>
		<url public="1" set="nmeSetURL"><c path="String"/></url>
		<new public="1" set="method"><f a="?path">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.filesystem.StorageVolume" params="" file="C:\Development\Haxe\nme/nme/filesystem/StorageVolume.hx" extern="1">
		<drive public="1" set="null"><c path="String"/></drive>
		<fileSystemType public="1" set="null"><c path="String"/></fileSystemType>
		<isRemovable public="1" set="null"><e path="Bool"/></isRemovable>
		<isWritable public="1" set="null"><e path="Bool"/></isWritable>
		<name public="1" set="null"><c path="String"/></name>
		<rootDirectory public="1" set="null"><c path="nme.filesystem.File"/></rootDirectory>
		<new public="1" set="method"><f a="inRootDirPath:inName:inWritable:inRemovable:inFileSysType:inDrive">
	<c path="nme.filesystem.File"/>
	<c path="String"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.filesystem.StorageVolumeInfo" params="" file="C:\Development\Haxe\nme/nme/filesystem/StorageVolumeInfo.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<isSupported public="1" static="1"><unknown/></isSupported>
		<storageVolumeInfo public="1" get="getInstance" set="null" static="1"><c path="nme.filesystem.StorageVolumeInfo"/></storageVolumeInfo>
		<getInstance public="1" set="method" static="1"><f a=""><c path="nme.filesystem.StorageVolumeInfo"/></f></getInstance>
		<getStorageVolumes public="1" set="method"><f a=""><c path="Array"><c path="nme.filesystem.StorageVolume"/></c></f></getStorageVolumes>
	</class>
	<class path="nme.filters.BitmapFilter" params="" file="C:\Development\Haxe\nme/nme/filters/BitmapFilter.hx" extern="1">
		<clone public="1" set="method"><f a=""><c path="nme.filters.BitmapFilter"/></f></clone>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.filters.BitmapFilterQuality" params="" file="C:\Development\Haxe\nme/nme/filters/BitmapFilterQuality.hx" extern="1">
		<HIGH public="1" get="inline" set="null" line="6" static="1"><c path="Int"/></HIGH>
		<LOW public="1" get="inline" set="null" line="7" static="1"><c path="Int"/></LOW>
		<MEDIUM public="1" get="inline" set="null" line="8" static="1"><c path="Int"/></MEDIUM>
	</class>
	<enum path="nme.filters.BitmapFilterType" params="" file="C:\Development\Haxe\nme/nme/filters/BitmapFilterType.hx">
		<OUTER/>
		<INNER/>
		<FULL/>
	</enum>
	<class path="nme.filters.BlurFilter" params="" file="C:\Development\Haxe\nme/nme/filters/BlurFilter.hx" extern="1">
		<extends path="nme.filters.BitmapFilter"/>
		<blurX public="1"><c path="Float"/></blurX>
		<blurY public="1"><c path="Float"/></blurY>
		<quality public="1"><c path="Int"/></quality>
		<new public="1" set="method"><f a="?blurX:?blurY:?quality">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.filters.DropShadowFilter" params="" file="C:\Development\Haxe\nme/nme/filters/DropShadowFilter.hx" extern="1">
		<extends path="nme.filters.BitmapFilter"/>
		<alpha public="1"><c path="Float"/></alpha>
		<angle public="1"><c path="Float"/></angle>
		<blurX public="1"><c path="Float"/></blurX>
		<blurY public="1"><c path="Float"/></blurY>
		<color public="1"><c path="Int"/></color>
		<distance public="1"><c path="Float"/></distance>
		<hideObject public="1"><e path="Bool"/></hideObject>
		<inner public="1"><e path="Bool"/></inner>
		<knockout public="1"><e path="Bool"/></knockout>
		<quality public="1"><c path="Int"/></quality>
		<strength public="1"><c path="Float"/></strength>
		<new public="1" set="method"><f a="?distance:?angle:?color:?alpha:?blurX:?blurY:?strength:?quality:?inner:?knockout:?hideObject">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.filters.GlowFilter" params="" file="C:\Development\Haxe\nme/nme/filters/GlowFilter.hx" extern="1">
		<extends path="nme.filters.BitmapFilter"/>
		<alpha public="1"><c path="Float"/></alpha>
		<blurX public="1"><c path="Float"/></blurX>
		<blurY public="1"><c path="Float"/></blurY>
		<color public="1"><c path="Int"/></color>
		<inner public="1"><e path="Bool"/></inner>
		<knockout public="1"><e path="Bool"/></knockout>
		<quality public="1"><c path="Int"/></quality>
		<strength public="1"><c path="Float"/></strength>
		<new public="1" set="method"><f a="?color:?alpha:?blurX:?blurY:?strength:?quality:?inner:?knockout">
	<c path="Int"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.geom.ColorTransform" params="" file="C:\Development\Haxe\nme/nme/geom/ColorTransform.hx" extern="1">
		<alphaMultiplier public="1"><c path="Float"/></alphaMultiplier>
		<alphaOffset public="1"><c path="Float"/></alphaOffset>
		<blueMultiplier public="1"><c path="Float"/></blueMultiplier>
		<blueOffset public="1"><c path="Float"/></blueOffset>
		<color public="1"><c path="Int"/></color>
		<greenMultiplier public="1"><c path="Float"/></greenMultiplier>
		<greenOffset public="1"><c path="Float"/></greenOffset>
		<redMultiplier public="1"><c path="Float"/></redMultiplier>
		<redOffset public="1"><c path="Float"/></redOffset>
		<concat public="1" set="method"><f a="second">
	<c path="nme.geom.ColorTransform"/>
	<e path="Void"/>
</f></concat>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method"><f a="?redMultiplier:?greenMultiplier:?blueMultiplier:?alphaMultiplier:?redOffset:?greenOffset:?blueOffset:?alphaOffset">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.geom.Matrix" params="" file="C:\Development\Haxe\nme/nme/geom/Matrix.hx" extern="1">
		<a public="1"><c path="Float"/></a>
		<b public="1"><c path="Float"/></b>
		<c public="1"><c path="Float"/></c>
		<d public="1"><c path="Float"/></d>
		<tx public="1"><c path="Float"/></tx>
		<ty public="1"><c path="Float"/></ty>
		<clone public="1" set="method"><f a=""><c path="nme.geom.Matrix"/></f></clone>
		<concat public="1" set="method"><f a="m">
	<c path="nme.geom.Matrix"/>
	<e path="Void"/>
</f></concat>
		<copyColumnFrom public="1"><f a="column:vector3D">
	<c path="Int"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyColumnFrom>
		<copyColumnTo public="1"><f a="column:vector3D">
	<c path="Int"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyColumnTo>
		<copyFrom public="1"><f a="sourceMatrix">
	<c path="nme.geom.Matrix"/>
	<e path="Void"/>
</f></copyFrom>
		<copyRowFrom public="1"><f a="row:vector3D">
	<c path="Int"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyRowFrom>
		<copyRowTo public="1"><f a="row:vector3D">
	<c path="Int"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyRowTo>
		<createBox public="1" set="method"><f a="scaleX:scaleY:?rotation:?tx:?ty">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></createBox>
		<createGradientBox public="1" set="method"><f a="width:height:?rotation:?tx:?ty">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></createGradientBox>
		<deltaTransformPoint public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Point"/>
</f></deltaTransformPoint>
		<identity public="1" set="method"><f a=""><e path="Void"/></f></identity>
		<invert public="1" set="method"><f a=""><e path="Void"/></f></invert>
		<rotate public="1" set="method"><f a="angle">
	<c path="Float"/>
	<e path="Void"/>
</f></rotate>
		<scale public="1" set="method"><f a="sx:sy">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></scale>
		<setTo public="1"><f a="aa:ba:ca:da:txa:tya">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setTo>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<transformPoint public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Point"/>
</f></transformPoint>
		<translate public="1" set="method"><f a="dx:dy">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></translate>
		<new public="1" set="method"><f a="?a:?b:?c:?d:?tx:?ty">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.geom.Matrix3D" params="" file="C:\Development\Haxe\nme/nme/geom/Matrix3D.hx" extern="1">
		<interpolate public="1" static="1"><f a="thisMat:toMat:percent">
	<c path="nme.geom.Matrix3D"/>
	<c path="nme.geom.Matrix3D"/>
	<c path="Float"/>
	<c path="nme.geom.Matrix3D"/>
</f></interpolate>
		<determinant public="1" set="null"><c path="Float"/></determinant>
		<position public="1"><c path="nme.geom.Vector3D"/></position>
		<rawData public="1"><t path="nme.Vector"><c path="Float"/></t></rawData>
		<append public="1" set="method"><f a="lhs">
	<c path="nme.geom.Matrix3D"/>
	<e path="Void"/>
</f></append>
		<appendRotation public="1" set="method"><f a="degrees:axis:?pivotPoint">
	<c path="Float"/>
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></appendRotation>
		<appendScale public="1" set="method"><f a="xScale:yScale:zScale">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></appendScale>
		<appendTranslation public="1" set="method"><f a="x:y:z">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></appendTranslation>
		<clone public="1" set="method"><f a=""><c path="nme.geom.Matrix3D"/></f></clone>
		<copyColumnFrom public="1"><f a="column:vector3D">
	<c path="Int"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyColumnFrom>
		<copyColumnTo public="1"><f a="column:vector3D">
	<c path="Int"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyColumnTo>
		<copyFrom public="1"><f a="sourceMatrix3D">
	<c path="nme.geom.Matrix3D"/>
	<e path="Void"/>
</f></copyFrom>
		<copyRawDataFrom public="1"><f a="vector:?index:?transpose">
	<t path="nme.Vector"><c path="Float"/></t>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></copyRawDataFrom>
		<copyRawDataTo public="1"><f a="vector:?index:?transpose">
	<t path="nme.Vector"><c path="Float"/></t>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></copyRawDataTo>
		<copyRowFrom public="1"><f a="row:vector3D">
	<c path="Int"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyRowFrom>
		<copyRowTo public="1"><f a="row:vector3D">
	<c path="Int"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyRowTo>
		<copyToMatrix3D public="1"><f a="dest">
	<c path="nme.geom.Matrix3D"/>
	<e path="Void"/>
</f></copyToMatrix3D>
		<deltaTransformVector public="1" set="method"><f a="v">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
</f></deltaTransformVector>
		<identity public="1" set="method"><f a=""><e path="Void"/></f></identity>
		<interpolateTo public="1" set="method"><f a="toMat:percent">
	<c path="nme.geom.Matrix3D"/>
	<c path="Float"/>
	<e path="Void"/>
</f></interpolateTo>
		<invert public="1" set="method"><f a=""><e path="Bool"/></f></invert>
		<pointAt public="1" set="method"><f a="pos:?at:?up">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></pointAt>
		<prepend public="1" set="method"><f a="rhs">
	<c path="nme.geom.Matrix3D"/>
	<e path="Void"/>
</f></prepend>
		<prependRotation public="1" set="method"><f a="degrees:axis:?pivotPoint">
	<c path="Float"/>
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></prependRotation>
		<prependScale public="1" set="method"><f a="xScale:yScale:zScale">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></prependScale>
		<prependTranslation public="1" set="method"><f a="x:y:z">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></prependTranslation>
		<transformVector public="1" set="method"><f a="v">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
</f></transformVector>
		<transformVectors public="1" set="method"><f a="vin:vout">
	<t path="nme.Vector"><c path="Float"/></t>
	<t path="nme.Vector"><c path="Float"/></t>
	<e path="Void"/>
</f></transformVectors>
		<transpose public="1" set="method"><f a=""><e path="Void"/></f></transpose>
		<new public="1"><f a="?v">
	<t path="nme.Vector"><c path="Float"/></t>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.geom.Point" params="" file="C:\Development\Haxe\nme/nme/geom/Point.hx" extern="1">
		<distance public="1" set="method" static="1"><f a="pt1:pt2">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Point"/>
	<c path="Float"/>
</f></distance>
		<interpolate public="1" set="method" static="1"><f a="pt1:pt2:f">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Point"/>
	<c path="Float"/>
	<c path="nme.geom.Point"/>
</f></interpolate>
		<polar public="1" set="method" static="1"><f a="len:angle">
	<c path="Float"/>
	<c path="Float"/>
	<c path="nme.geom.Point"/>
</f></polar>
		<length public="1" set="null"><c path="Float"/></length>
		<x public="1"><c path="Float"/></x>
		<y public="1"><c path="Float"/></y>
		<add public="1" set="method"><f a="v">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Point"/>
</f></add>
		<clone public="1" set="method"><f a=""><c path="nme.geom.Point"/></f></clone>
		<copyFrom public="1"><f a="sourcePoint">
	<c path="nme.geom.Point"/>
	<e path="Void"/>
</f></copyFrom>
		<equals public="1" set="method"><f a="toCompare">
	<c path="nme.geom.Point"/>
	<e path="Bool"/>
</f></equals>
		<normalize public="1" set="method"><f a="thickness">
	<c path="Float"/>
	<e path="Void"/>
</f></normalize>
		<offset public="1" set="method"><f a="dx:dy">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></offset>
		<setTo public="1"><f a="xa:ya">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setTo>
		<subtract public="1" set="method"><f a="v">
	<c path="nme.geom.Point"/>
	<c path="nme.geom.Point"/>
</f></subtract>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method"><f a="?x:?y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.geom.Rectangle" params="" file="C:\Development\Haxe\nme/nme/geom/Rectangle.hx" extern="1">
		<bottom public="1"><c path="Float"/></bottom>
		<bottomRight public="1"><c path="nme.geom.Point"/></bottomRight>
		<height public="1"><c path="Float"/></height>
		<left public="1"><c path="Float"/></left>
		<right public="1"><c path="Float"/></right>
		<size public="1"><c path="nme.geom.Point"/></size>
		<top public="1"><c path="Float"/></top>
		<topLeft public="1"><c path="nme.geom.Point"/></topLeft>
		<width public="1"><c path="Float"/></width>
		<x public="1"><c path="Float"/></x>
		<y public="1"><c path="Float"/></y>
		<clone public="1" set="method"><f a=""><c path="nme.geom.Rectangle"/></f></clone>
		<contains public="1" set="method"><f a="x:y">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Bool"/>
</f></contains>
		<containsPoint public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<e path="Bool"/>
</f></containsPoint>
		<containsRect public="1" set="method"><f a="rect">
	<c path="nme.geom.Rectangle"/>
	<e path="Bool"/>
</f></containsRect>
		<copyFrom public="1"><f a="sourceRect">
	<c path="nme.geom.Rectangle"/>
	<e path="Void"/>
</f></copyFrom>
		<equals public="1" set="method"><f a="toCompare">
	<c path="nme.geom.Rectangle"/>
	<e path="Bool"/>
</f></equals>
		<inflate public="1" set="method"><f a="dx:dy">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></inflate>
		<inflatePoint public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<e path="Void"/>
</f></inflatePoint>
		<intersection public="1" set="method"><f a="toIntersect">
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Rectangle"/>
</f></intersection>
		<intersects public="1" set="method"><f a="toIntersect">
	<c path="nme.geom.Rectangle"/>
	<e path="Bool"/>
</f></intersects>
		<isEmpty public="1" set="method"><f a=""><e path="Bool"/></f></isEmpty>
		<offset public="1" set="method"><f a="dx:dy">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></offset>
		<offsetPoint public="1" set="method"><f a="point">
	<c path="nme.geom.Point"/>
	<e path="Void"/>
</f></offsetPoint>
		<setEmpty public="1" set="method"><f a=""><e path="Void"/></f></setEmpty>
		<setTo public="1"><f a="xa:ya:widtha:heighta">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setTo>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<union public="1" set="method"><f a="toUnion">
	<c path="nme.geom.Rectangle"/>
	<c path="nme.geom.Rectangle"/>
</f></union>
		<new public="1" set="method"><f a="?x:?y:?width:?height">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.geom.Transform" params="" file="C:\Development\Haxe\nme/nme/geom/Transform.hx" extern="1">
		<colorTransform public="1"><c path="nme.geom.ColorTransform"/></colorTransform>
		<concatenatedColorTransform public="1" set="null"><c path="nme.geom.ColorTransform"/></concatenatedColorTransform>
		<concatenatedMatrix public="1" set="null"><c path="nme.geom.Matrix"/></concatenatedMatrix>
		<matrix public="1"><c path="nme.geom.Matrix"/></matrix>
		<matrix3D public="1"><c path="nme.geom.Matrix3D"/></matrix3D>
		<pixelBounds public="1" set="null"><c path="nme.geom.Rectangle"/></pixelBounds>
		<getRelativeMatrix3D public="1"><f a="relativeTo">
	<c path="nme.display.DisplayObject"/>
	<c path="nme.geom.Matrix3D"/>
</f></getRelativeMatrix3D>
		<new public="1" set="method"><f a="displayObject">
	<c path="nme.display.DisplayObject"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.geom.Vector3D" params="" file="C:\Development\Haxe\nme/nme/geom/Vector3D.hx" extern="1">
		<X_AXIS public="1" static="1"><c path="nme.geom.Vector3D"/></X_AXIS>
		<Y_AXIS public="1" static="1"><c path="nme.geom.Vector3D"/></Y_AXIS>
		<Z_AXIS public="1" static="1"><c path="nme.geom.Vector3D"/></Z_AXIS>
		<angleBetween public="1" static="1"><f a="a:b">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
	<c path="Float"/>
</f></angleBetween>
		<distance public="1" static="1"><f a="pt1:pt2">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
	<c path="Float"/>
</f></distance>
		<length public="1" set="null"><c path="Float"/></length>
		<lengthSquared public="1" set="null"><c path="Float"/></lengthSquared>
		<w public="1"><c path="Float"/></w>
		<x public="1"><c path="Float"/></x>
		<y public="1"><c path="Float"/></y>
		<z public="1"><c path="Float"/></z>
		<add public="1" set="method"><f a="a">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
</f></add>
		<clone public="1" set="method"><f a=""><c path="nme.geom.Vector3D"/></f></clone>
		<copyFrom public="1"><f a="sourceVector3D">
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></copyFrom>
		<crossProduct public="1" set="method"><f a="a">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
</f></crossProduct>
		<decrementBy public="1" set="method"><f a="a">
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></decrementBy>
		<dotProduct public="1" set="method"><f a="a">
	<c path="nme.geom.Vector3D"/>
	<c path="Float"/>
</f></dotProduct>
		<equals public="1" set="method"><f a="toCompare:?allFour">
	<c path="nme.geom.Vector3D"/>
	<e path="Bool"/>
	<e path="Bool"/>
</f></equals>
		<incrementBy public="1" set="method"><f a="a">
	<c path="nme.geom.Vector3D"/>
	<e path="Void"/>
</f></incrementBy>
		<nearEquals public="1" set="method"><f a="toCompare:tolerance:?allFour">
	<c path="nme.geom.Vector3D"/>
	<c path="Float"/>
	<e path="Bool"/>
	<e path="Bool"/>
</f></nearEquals>
		<negate public="1" set="method"><f a=""><e path="Void"/></f></negate>
		<normalize public="1" set="method"><f a=""><c path="Float"/></f></normalize>
		<project public="1" set="method"><f a=""><e path="Void"/></f></project>
		<scaleBy public="1" set="method"><f a="s">
	<c path="Float"/>
	<e path="Void"/>
</f></scaleBy>
		<setTo public="1"><f a="xa:ya:za">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></setTo>
		<subtract public="1" set="method"><f a="a">
	<c path="nme.geom.Vector3D"/>
	<c path="nme.geom.Vector3D"/>
</f></subtract>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1"><f a="?x:?y:?z:?w">
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.media.ID3Info" params="" file="C:\Development\Haxe\nme/nme/media/ID3Info.hx" extern="1">
		<album public="1"><c path="String"/></album>
		<artist public="1"><c path="String"/></artist>
		<comment public="1"><c path="String"/></comment>
		<genre public="1"><c path="String"/></genre>
		<songName public="1"><c path="String"/></songName>
		<track public="1"><c path="String"/></track>
		<year public="1"><c path="String"/></year>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="nme.media.Sound" params="" file="C:\Development\Haxe\nme/nme/media/Sound.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<bytesLoaded public="1" set="null"><c path="Int"/></bytesLoaded>
		<bytesTotal public="1" set="null"><c path="Int"/></bytesTotal>
		<id3 public="1" set="null"><c path="nme.media.ID3Info"/></id3>
		<isBuffering public="1" set="null"><e path="Bool"/></isBuffering>
		<isURLInaccessible public="1"><e path="Bool"/></isURLInaccessible>
		<length public="1" set="null"><c path="Float"/></length>
		<url public="1" set="null"><c path="String"/></url>
		<close public="1" set="method"><f a=""><e path="Void"/></f></close>
		<extract public="1"><f a="target:length:?startPosition">
	<c path="nme.utils.ByteArray"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
</f></extract>
		<load public="1" set="method"><f a="stream:?context">
	<c path="nme.net.URLRequest"/>
	<c path="nme.media.SoundLoaderContext"/>
	<e path="Void"/>
</f></load>
		<loadCompressedDataFromByteArray public="1"><f a="bytes:bytesLength">
	<c path="nme.utils.ByteArray"/>
	<c path="Int"/>
	<e path="Void"/>
</f></loadCompressedDataFromByteArray>
		<loadPCMFromByteArray public="1"><f a="bytes:samples:?format:?stereo:?sampleRate">
	<c path="nme.utils.ByteArray"/>
	<c path="Int"/>
	<c path="String"/>
	<e path="Bool"/>
	<c path="Float"/>
	<e path="Void"/>
</f></loadPCMFromByteArray>
		<play public="1" set="method"><f a="?startTime:?loops:?sndTransform">
	<c path="Float"/>
	<c path="Int"/>
	<c path="nme.media.SoundTransform"/>
	<c path="nme.media.SoundChannel"/>
</f></play>
		<new public="1" set="method"><f a="?stream:?context">
	<c path="nme.net.URLRequest"/>
	<c path="nme.media.SoundLoaderContext"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.media.SoundChannel" params="" file="C:\Development\Haxe\nme/nme/media/SoundChannel.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<leftPeak public="1" set="null"><c path="Float"/></leftPeak>
		<position public="1" set="null"><c path="Float"/></position>
		<rightPeak public="1" set="null"><c path="Float"/></rightPeak>
		<soundTransform public="1"><c path="nme.media.SoundTransform"/></soundTransform>
		<stop public="1" set="method"><f a=""><e path="Void"/></f></stop>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.media.SoundLoaderContext" params="" file="C:\Development\Haxe\nme/nme/media/SoundLoaderContext.hx" extern="1">
		<bufferTime public="1"><c path="Float"/></bufferTime>
		<checkPolicyFile public="1"><e path="Bool"/></checkPolicyFile>
		<new public="1" set="method"><f a="?bufferTime:?checkPolicyFile">
	<c path="Float"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.media.SoundTransform" params="" file="C:\Development\Haxe\nme/nme/media/SoundTransform.hx" extern="1">
		<leftToLeft public="1"><c path="Float"/></leftToLeft>
		<leftToRight public="1"><c path="Float"/></leftToRight>
		<pan public="1"><c path="Float"/></pan>
		<rightToLeft public="1"><c path="Float"/></rightToLeft>
		<rightToRight public="1"><c path="Float"/></rightToRight>
		<volume public="1"><c path="Float"/></volume>
		<new public="1" set="method"><f a="?vol:?panning">
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.net.SharedObject" params="" file="C:\Development\Haxe\nme/nme/net/SharedObject.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<defaultObjectEncoding public="1" static="1"><c path="Int"/></defaultObjectEncoding>
		<deleteAll public="1" set="method" static="1"><f a="url">
	<c path="String"/>
	<c path="Int"/>
</f></deleteAll>
		<getDiskUsage public="1" set="method" static="1"><f a="url">
	<c path="String"/>
	<c path="Int"/>
</f></getDiskUsage>
		<getLocal public="1" set="method" static="1"><f a="name:?localPath:?secure">
	<c path="String"/>
	<c path="String"/>
	<e path="Bool"/>
	<c path="nme.net.SharedObject"/>
</f></getLocal>
		<getRemote public="1" set="method" static="1"><f a="name:?remotePath:?persistence:?secure">
	<c path="String"/>
	<c path="String"/>
	<d/>
	<e path="Bool"/>
	<c path="nme.net.SharedObject"/>
</f></getRemote>
		<client public="1"><d/></client>
		<data public="1" set="null"><d/></data>
		<fps public="1" get="null"><c path="Float"/></fps>
		<objectEncoding public="1"><c path="Int"/></objectEncoding>
		<size public="1" set="null"><c path="Int"/></size>
		<clear public="1" set="method"><f a=""><e path="Void"/></f></clear>
		<close public="1" set="method"><f a=""><e path="Void"/></f></close>
		<flush public="1" set="method"><f a="?minDiskSpace">
	<c path="Int"/>
	<c path="String"/>
</f></flush>
		<setDirty public="1" set="method"><f a="propertyName">
	<c path="String"/>
	<e path="Void"/>
</f></setDirty>
		<setProperty public="1" set="method"><f a="propertyName:?value">
	<c path="String"/>
	<d/>
	<e path="Void"/>
</f></setProperty>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.net.SharedObjectFlushStatus" params="" file="C:\Development\Haxe\nme/nme/net/SharedObjectFlushStatus.hx" extern="1">
		<FLUSHED public="1" static="1"><c path="String"/></FLUSHED>
		<PENDING public="1" static="1"><c path="String"/></PENDING>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.net.URLLoader" params="" file="C:\Development\Haxe\nme/nme/net/URLLoader.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<bytesLoaded public="1"><c path="Int"/></bytesLoaded>
		<bytesTotal public="1"><c path="Int"/></bytesTotal>
		<data public="1"><d/></data>
		<dataFormat public="1"><e path="nme.net.URLLoaderDataFormat"/></dataFormat>
		<close public="1" set="method"><f a=""><e path="Void"/></f></close>
		<load public="1" set="method"><f a="request">
	<c path="nme.net.URLRequest"/>
	<e path="Void"/>
</f></load>
		<new public="1" set="method"><f a="?request">
	<c path="nme.net.URLRequest"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.net.URLLoaderDataFormat" params="" file="C:\Development\Haxe\nme/nme/net/URLLoaderDataFormat.hx">
		<VARIABLES/>
		<TEXT/>
		<BINARY/>
	</enum>
	<class path="nme.net.URLRequest" params="" file="C:\Development\Haxe\nme/nme/net/URLRequest.hx" extern="1">
		<contentType public="1"><c path="String"/></contentType>
		<data public="1"><d/></data>
		<digest public="1"><c path="String"/></digest>
		<method public="1"><c path="String"/></method>
		<url public="1"><c path="String"/></url>
		<new public="1" set="method"><f a="?url">
	<c path="String"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.net.URLRequestMethod" params="" file="C:\Development\Haxe\nme/nme/net/URLRequestMethod.hx" extern="1">
		<DELETE public="1" static="1"><c path="String"/></DELETE>
		<GET public="1" static="1"><c path="String"/></GET>
		<HEAD public="1" static="1"><c path="String"/></HEAD>
		<OPTIONS public="1" static="1"><c path="String"/></OPTIONS>
		<POST public="1" static="1"><c path="String"/></POST>
		<PUT public="1" static="1"><c path="String"/></PUT>
	</class>
	<class path="nme.net.URLVariables" params="" file="C:\Development\Haxe\nme/nme/net/URLVariables.hx" extern="1">
		<decode public="1" set="method"><f a="source">
	<c path="String"/>
	<e path="Void"/>
</f></decode>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method"><f a="?source">
	<c path="String"/>
	<e path="Void"/>
</f></new>
		<haxe_dynamic><d/></haxe_dynamic>
	</class>
	<class path="nme.sensors.Accelerometer" params="" file="C:\Development\Haxe\nme/nme/sensors/Accelerometer.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<isSupported public="1" static="1"><e path="Bool"/></isSupported>
		<muted public="1" set="null"><e path="Bool"/></muted>
		<setRequestedUpdateInterval public="1" set="method"><f a="interval">
	<c path="Float"/>
	<e path="Void"/>
</f></setRequestedUpdateInterval>
		<new public="1"><f a=""><e path="Void"/></f></new>
	</class>
	<class path="nme.system.Capabilities" params="" file="C:\Development\Haxe\nme/nme/system/Capabilities.hx" extern="1">
		<_internal public="1" set="null" static="1"><c path="Int"/></_internal>
		<avHardwareDisable public="1" set="null" static="1"><e path="Bool"/></avHardwareDisable>
		<cpuArchitecture public="1" static="1"><c path="String"/></cpuArchitecture>
		<hasAccessibility public="1" set="null" static="1"><e path="Bool"/></hasAccessibility>
		<hasAudio public="1" set="null" static="1"><e path="Bool"/></hasAudio>
		<hasAudioEncoder public="1" set="null" static="1"><e path="Bool"/></hasAudioEncoder>
		<hasEmbeddedVideo public="1" set="null" static="1"><e path="Bool"/></hasEmbeddedVideo>
		<hasIME public="1" set="null" static="1"><e path="Bool"/></hasIME>
		<hasMP3 public="1" set="null" static="1"><e path="Bool"/></hasMP3>
		<hasPrinting public="1" set="null" static="1"><e path="Bool"/></hasPrinting>
		<hasScreenBroadcast public="1" set="null" static="1"><e path="Bool"/></hasScreenBroadcast>
		<hasScreenPlayback public="1" set="null" static="1"><e path="Bool"/></hasScreenPlayback>
		<hasStreamingAudio public="1" set="null" static="1"><e path="Bool"/></hasStreamingAudio>
		<hasStreamingVideo public="1" set="null" static="1"><e path="Bool"/></hasStreamingVideo>
		<hasTLS public="1" set="null" static="1"><e path="Bool"/></hasTLS>
		<hasVideoEncoder public="1" set="null" static="1"><e path="Bool"/></hasVideoEncoder>
		<isDebugger public="1" set="null" static="1"><e path="Bool"/></isDebugger>
		<isEmbeddedInAcrobat public="1" static="1"><e path="Bool"/></isEmbeddedInAcrobat>
		<language public="1" set="null" static="1"><c path="String"/></language>
		<localFileReadDisable public="1" set="null" static="1"><e path="Bool"/></localFileReadDisable>
		<manufacturer public="1" set="null" static="1"><c path="String"/></manufacturer>
		<maxLevelIDC public="1" static="1"><c path="String"/></maxLevelIDC>
		<os public="1" set="null" static="1"><c path="String"/></os>
		<pixelAspectRatio public="1" set="null" static="1"><c path="Float"/></pixelAspectRatio>
		<playerType public="1" set="null" static="1"><c path="String"/></playerType>
		<screenColor public="1" set="null" static="1"><c path="String"/></screenColor>
		<screenDPI public="1" set="null" static="1"><c path="Float"/></screenDPI>
		<screenResolutionX public="1" set="null" static="1"><c path="Float"/></screenResolutionX>
		<screenResolutionY public="1" set="null" static="1"><c path="Float"/></screenResolutionY>
		<serverString public="1" set="null" static="1"><c path="String"/></serverString>
		<supports32BitProcesses public="1" static="1"><e path="Bool"/></supports32BitProcesses>
		<supports64BitProcesses public="1" static="1"><e path="Bool"/></supports64BitProcesses>
		<version public="1" set="null" static="1"><c path="String"/></version>
		<hasMultiChannelAudio public="1" static="1"><f a="type">
	<c path="String"/>
	<e path="Bool"/>
</f></hasMultiChannelAudio>
	</class>
	<class path="nme.system.System" params="" file="C:\Development\Haxe\nme/nme/system/System.hx" extern="1">
		<deviceID public="1" set="null" static="1"><c path="String"/></deviceID>
		<totalMemory public="1" set="null" static="1"><c path="Int"/></totalMemory>
		<exit public="1" set="method" static="1"><f a="code">
	<c path="Int"/>
	<e path="Void"/>
</f></exit>
		<gc public="1" set="method" static="1"><f a=""><e path="Void"/></f></gc>
	</class>
	<enum path="nme.text.AntiAliasType" params="" file="C:\Development\Haxe\nme/nme/text/AntiAliasType.hx">
		<NORMAL/>
		<ADVANCED/>
	</enum>
	<class path="nme.text.Font" params="" file="C:\Development\Haxe\nme/nme/text/Font.hx" extern="1">
		<enumerateFonts public="1" set="method" static="1"><f a="?enumerateDeviceFonts">
	<e path="Bool"/>
	<c path="Array"><c path="nme.text.Font"/></c>
</f></enumerateFonts>
		<registerFont public="1" set="method" static="1"><f a="font">
	<c path="Class"><d/></c>
	<e path="Void"/>
</f></registerFont>
		<fontName public="1" set="null"><c path="String"/></fontName>
		<fontStyle public="1" set="null"><e path="nme.text.FontStyle"/></fontStyle>
		<fontType public="1" set="null"><e path="nme.text.FontType"/></fontType>
		<hasGlyphs public="1" set="method"><f a="str">
	<c path="String"/>
	<e path="Bool"/>
</f></hasGlyphs>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<enum path="nme.text.FontStyle" params="" file="C:\Development\Haxe\nme/nme/text/FontStyle.hx">
		<REGULAR/>
		<ITALIC/>
		<BOLD_ITALIC/>
		<BOLD/>
	</enum>
	<enum path="nme.text.FontType" params="" file="C:\Development\Haxe\nme/nme/text/FontType.hx">
		<EMBEDDED_CFF/>
		<EMBEDDED/>
		<DEVICE/>
	</enum>
	<typedef path="nme.text.NMEFontDef" params="" file="C:\Development\Haxe\nme/nme/text/NMEFont.hx" module="nme.text.NMEFont"><a>
	<name><c path="String"/></name>
	<italic><e path="Bool"/></italic>
	<height><c path="Int"/></height>
	<bold><e path="Bool"/></bold>
</a></typedef>
	<typedef path="nme.text.NMEFontFactory" params="" file="C:\Development\Haxe\nme/nme/text/NMEFont.hx" module="nme.text.NMEFont"><f a="">
	<t path="nme.text.NMEFontDef"/>
	<c path="nme.text.NMEFont"/>
</f></typedef>
	<typedef path="nme.text.NMEGlyphInfo" params="" file="C:\Development\Haxe\nme/nme/text/NMEFont.hx" module="nme.text.NMEFont"><a>
	<width><c path="Int"/></width>
	<offsetY><c path="Int"/></offsetY>
	<offsetX><c path="Int"/></offsetX>
	<height><c path="Int"/></height>
	<advance><c path="Int"/></advance>
</a></typedef>
	<class path="nme.text.NMEFont" params="" file="C:\Development\Haxe\nme/nme/text/NMEFont.hx" extern="1">
		<registerFont public="1" set="method" static="1"><f a="inName:inFactory">
	<c path="String"/>
	<t path="nme.text.NMEFontFactory"/>
	<e path="Void"/>
</f></registerFont>
		<getGlyphInfo public="1" set="method"><f a="inChar">
	<c path="Int"/>
	<t path="nme.text.NMEGlyphInfo"/>
</f></getGlyphInfo>
		<renderGlyph public="1" set="method"><f a="inChar">
	<c path="Int"/>
	<c path="nme.display.BitmapData"/>
</f></renderGlyph>
		<new public="1" set="method"><f a="inHeight:inAscent:inDescent:inIsRGB">
	<c path="Int"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.text.TextFieldAutoSize" params="" file="C:\Development\Haxe\nme/nme/text/TextFieldAutoSize.hx">
		<RIGHT/>
		<NONE/>
		<LEFT/>
		<CENTER/>
	</enum>
	<enum path="nme.text.TextFieldType" params="" file="C:\Development\Haxe\nme/nme/text/TextFieldType.hx">
		<INPUT/>
		<DYNAMIC/>
	</enum>
	<class path="nme.text.TextFormat" params="" file="C:\Development\Haxe\nme/nme/text/TextFormat.hx" extern="1">
		<align public="1"><e path="nme.text.TextFormatAlign"/></align>
		<blockIndent public="1"><t path="Null"><c path="Float"/></t></blockIndent>
		<bold public="1"><t path="Null"><e path="Bool"/></t></bold>
		<bullet public="1"><t path="Null"><e path="Bool"/></t></bullet>
		<color public="1"><t path="Null"><c path="Int"/></t></color>
		<font public="1"><c path="String"/></font>
		<indent public="1"><t path="Null"><c path="Float"/></t></indent>
		<italic public="1"><t path="Null"><e path="Bool"/></t></italic>
		<kerning public="1"><t path="Null"><e path="Bool"/></t></kerning>
		<leading public="1"><t path="Null"><c path="Float"/></t></leading>
		<leftMargin public="1"><t path="Null"><c path="Float"/></t></leftMargin>
		<letterSpacing public="1"><t path="Null"><c path="Float"/></t></letterSpacing>
		<rightMargin public="1"><t path="Null"><c path="Float"/></t></rightMargin>
		<size public="1"><t path="Null"><c path="Float"/></t></size>
		<tabStops public="1"><c path="Array"><c path="Int"/></c></tabStops>
		<target public="1"><c path="String"/></target>
		<underline public="1"><t path="Null"><e path="Bool"/></t></underline>
		<url public="1"><c path="String"/></url>
		<new public="1" set="method"><f a="?font:?size:?color:?bold:?italic:?underline:?url:?target:?align:?leftMargin:?rightMargin:?indent:?leading">
	<c path="String"/>
	<c path="Float"/>
	<c path="Int"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<e path="Bool"/>
	<c path="String"/>
	<c path="String"/>
	<e path="nme.text.TextFormatAlign"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<c path="Float"/>
	<e path="Void"/>
</f></new>
	</class>
	<enum path="nme.text.TextFormatAlign" params="" file="C:\Development\Haxe\nme/nme/text/TextFormatAlign.hx">
		<RIGHT/>
		<LEFT/>
		<JUSTIFY/>
		<CENTER/>
	</enum>
	<typedef path="nme.ui.Acceleration" params="" file="C:\Development\Haxe\nme/nme/ui/Acceleration.hx"><a>
	<z><c path="Float"/></z>
	<y><c path="Float"/></y>
	<x><c path="Float"/></x>
</a></typedef>
	<class path="nme.ui.Accelerometer" params="" file="C:\Development\Haxe\nme/nme/ui/Accelerometer.hx" extern="1"><get public="1" set="method" static="1"><f a=""><t path="nme.ui.Acceleration"/></f></get></class>
	<class path="nme.ui.Keyboard" params="" file="C:\Development\Haxe\nme/nme/ui/Keyboard.hx" extern="1">
		<A public="1" static="1"><c path="Int"/></A>
		<ALTERNATE public="1" static="1"><c path="Int"/></ALTERNATE>
		<B public="1" static="1"><c path="Int"/></B>
		<BACKQUOTE public="1" static="1"><c path="Int"/></BACKQUOTE>
		<BACKSLASH public="1" static="1"><c path="Int"/></BACKSLASH>
		<BACKSPACE public="1" static="1"><c path="Int"/></BACKSPACE>
		<C public="1" static="1"><c path="Int"/></C>
		<CAPS_LOCK public="1" static="1"><c path="Int"/></CAPS_LOCK>
		<COMMA public="1" static="1"><c path="Int"/></COMMA>
		<COMMAND public="1" static="1"><c path="Int"/></COMMAND>
		<CONTROL public="1" static="1"><c path="Int"/></CONTROL>
		<D public="1" static="1"><c path="Int"/></D>
		<DELETE public="1" static="1"><c path="Int"/></DELETE>
		<DOWN public="1" static="1"><c path="Int"/></DOWN>
		<E public="1" static="1"><c path="Int"/></E>
		<END public="1" static="1"><c path="Int"/></END>
		<ENTER public="1" static="1"><c path="Int"/></ENTER>
		<EQUAL public="1" static="1"><c path="Int"/></EQUAL>
		<ESCAPE public="1" static="1"><c path="Int"/></ESCAPE>
		<F public="1" static="1"><c path="Int"/></F>
		<F1 public="1" static="1"><c path="Int"/></F1>
		<F10 public="1" static="1"><c path="Int"/></F10>
		<F11 public="1" static="1"><c path="Int"/></F11>
		<F12 public="1" static="1"><c path="Int"/></F12>
		<F13 public="1" static="1"><c path="Int"/></F13>
		<F14 public="1" static="1"><c path="Int"/></F14>
		<F15 public="1" static="1"><c path="Int"/></F15>
		<F2 public="1" static="1"><c path="Int"/></F2>
		<F3 public="1" static="1"><c path="Int"/></F3>
		<F4 public="1" static="1"><c path="Int"/></F4>
		<F5 public="1" static="1"><c path="Int"/></F5>
		<F6 public="1" static="1"><c path="Int"/></F6>
		<F7 public="1" static="1"><c path="Int"/></F7>
		<F8 public="1" static="1"><c path="Int"/></F8>
		<F9 public="1" static="1"><c path="Int"/></F9>
		<G public="1" static="1"><c path="Int"/></G>
		<H public="1" static="1"><c path="Int"/></H>
		<HOME public="1" static="1"><c path="Int"/></HOME>
		<I public="1" static="1"><c path="Int"/></I>
		<INSERT public="1" static="1"><c path="Int"/></INSERT>
		<J public="1" static="1"><c path="Int"/></J>
		<K public="1" static="1"><c path="Int"/></K>
		<L public="1" static="1"><c path="Int"/></L>
		<LEFT public="1" static="1"><c path="Int"/></LEFT>
		<LEFTBRACKET public="1" static="1"><c path="Int"/></LEFTBRACKET>
		<M public="1" static="1"><c path="Int"/></M>
		<MINUS public="1" static="1"><c path="Int"/></MINUS>
		<N public="1" static="1"><c path="Int"/></N>
		<NUMBER_0 public="1" static="1"><c path="Int"/></NUMBER_0>
		<NUMBER_1 public="1" static="1"><c path="Int"/></NUMBER_1>
		<NUMBER_2 public="1" static="1"><c path="Int"/></NUMBER_2>
		<NUMBER_3 public="1" static="1"><c path="Int"/></NUMBER_3>
		<NUMBER_4 public="1" static="1"><c path="Int"/></NUMBER_4>
		<NUMBER_5 public="1" static="1"><c path="Int"/></NUMBER_5>
		<NUMBER_6 public="1" static="1"><c path="Int"/></NUMBER_6>
		<NUMBER_7 public="1" static="1"><c path="Int"/></NUMBER_7>
		<NUMBER_8 public="1" static="1"><c path="Int"/></NUMBER_8>
		<NUMBER_9 public="1" static="1"><c path="Int"/></NUMBER_9>
		<NUMPAD public="1" static="1"><c path="Int"/></NUMPAD>
		<NUMPAD_0 public="1" static="1"><c path="Int"/></NUMPAD_0>
		<NUMPAD_1 public="1" static="1"><c path="Int"/></NUMPAD_1>
		<NUMPAD_2 public="1" static="1"><c path="Int"/></NUMPAD_2>
		<NUMPAD_3 public="1" static="1"><c path="Int"/></NUMPAD_3>
		<NUMPAD_4 public="1" static="1"><c path="Int"/></NUMPAD_4>
		<NUMPAD_5 public="1" static="1"><c path="Int"/></NUMPAD_5>
		<NUMPAD_6 public="1" static="1"><c path="Int"/></NUMPAD_6>
		<NUMPAD_7 public="1" static="1"><c path="Int"/></NUMPAD_7>
		<NUMPAD_8 public="1" static="1"><c path="Int"/></NUMPAD_8>
		<NUMPAD_9 public="1" static="1"><c path="Int"/></NUMPAD_9>
		<NUMPAD_ADD public="1" static="1"><c path="Int"/></NUMPAD_ADD>
		<NUMPAD_DECIMAL public="1" static="1"><c path="Int"/></NUMPAD_DECIMAL>
		<NUMPAD_DIVIDE public="1" static="1"><c path="Int"/></NUMPAD_DIVIDE>
		<NUMPAD_ENTER public="1" static="1"><c path="Int"/></NUMPAD_ENTER>
		<NUMPAD_MULTIPLY public="1" static="1"><c path="Int"/></NUMPAD_MULTIPLY>
		<NUMPAD_SUBTRACT public="1" static="1"><c path="Int"/></NUMPAD_SUBTRACT>
		<O public="1" static="1"><c path="Int"/></O>
		<P public="1" static="1"><c path="Int"/></P>
		<PAGE_DOWN public="1" static="1"><c path="Int"/></PAGE_DOWN>
		<PAGE_UP public="1" static="1"><c path="Int"/></PAGE_UP>
		<PERIOD public="1" static="1"><c path="Int"/></PERIOD>
		<Q public="1" static="1"><c path="Int"/></Q>
		<QUOTE public="1" static="1"><c path="Int"/></QUOTE>
		<R public="1" static="1"><c path="Int"/></R>
		<RIGHT public="1" static="1"><c path="Int"/></RIGHT>
		<RIGHTBRACKET public="1" static="1"><c path="Int"/></RIGHTBRACKET>
		<S public="1" static="1"><c path="Int"/></S>
		<SEMICOLON public="1" static="1"><c path="Int"/></SEMICOLON>
		<SETUP public="1" static="1"><c path="Int"/></SETUP>
		<SHIFT public="1" static="1"><c path="Int"/></SHIFT>
		<SLASH public="1" static="1"><c path="Int"/></SLASH>
		<SPACE public="1" static="1"><c path="Int"/></SPACE>
		<T public="1" static="1"><c path="Int"/></T>
		<TAB public="1" static="1"><c path="Int"/></TAB>
		<U public="1" static="1"><c path="Int"/></U>
		<UP public="1" static="1"><c path="Int"/></UP>
		<V public="1" static="1"><c path="Int"/></V>
		<W public="1" static="1"><c path="Int"/></W>
		<X public="1" static="1"><c path="Int"/></X>
		<Y public="1" static="1"><c path="Int"/></Y>
		<Z public="1" static="1"><c path="Int"/></Z>
	</class>
	<class path="nme.ui.Mouse" params="" file="C:\Development\Haxe\nme/nme/ui/Mouse.hx" extern="1">
		<cursor public="1" static="1"><d/></cursor>
		<supportsCursor public="1" static="1"><e path="Bool"/></supportsCursor>
		<hide public="1" set="method" static="1"><f a=""><e path="Void"/></f></hide>
		<show public="1" set="method" static="1"><f a=""><e path="Void"/></f></show>
	</class>
	<class path="nme.ui.Multitouch" params="" file="C:\Development\Haxe\nme/nme/ui/Multitouch.hx" extern="1">
		<inputMode public="1" static="1"><e path="nme.ui.MultitouchInputMode"/></inputMode>
		<maxTouchPoints public="1" static="1"><c path="Int"/></maxTouchPoints>
		<supportedGestures public="1" static="1"><t path="nme.Vector"><c path="String"/></t></supportedGestures>
		<supportsGestureEvents public="1" static="1"><e path="Bool"/></supportsGestureEvents>
		<supportsTouchEvents public="1" static="1"><e path="Bool"/></supportsTouchEvents>
	</class>
	<enum path="nme.ui.MultitouchInputMode" params="" file="C:\Development\Haxe\nme/nme/ui/MultitouchInputMode.hx">
		<TOUCH_POINT/>
		<NONE/>
		<GESTURE/>
	</enum>
	<class path="nme.utils.IDataInput" params="" file="C:\Development\Haxe\nme/nme/utils/IDataInput.hx" extern="1" interface="1">
		<bytesAvailable public="1" set="null"><c path="Int"/></bytesAvailable>
		<endian public="1"><e path="nme.utils.Endian"/></endian>
		<objectEncoding public="1"><c path="Int"/></objectEncoding>
		<readBoolean public="1" set="method"><f a=""><e path="Bool"/></f></readBoolean>
		<readByte public="1" set="method"><f a=""><c path="Int"/></f></readByte>
		<readBytes public="1" set="method"><f a="bytes:?offset:?length">
	<c path="nme.utils.ByteArray"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></readBytes>
		<readDouble public="1" set="method"><f a=""><c path="Float"/></f></readDouble>
		<readFloat public="1" set="method"><f a=""><c path="Float"/></f></readFloat>
		<readInt public="1" set="method"><f a=""><c path="Int"/></f></readInt>
		<readMultiByte public="1" set="method"><f a="length:charSet">
	<c path="Int"/>
	<c path="String"/>
	<c path="String"/>
</f></readMultiByte>
		<readObject public="1" set="method"><f a=""><d/></f></readObject>
		<readShort public="1" set="method"><f a=""><c path="Int"/></f></readShort>
		<readUTF public="1" set="method"><f a=""><c path="String"/></f></readUTF>
		<readUTFBytes public="1" set="method"><f a="length">
	<c path="Int"/>
	<c path="String"/>
</f></readUTFBytes>
		<readUnsignedByte public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedByte>
		<readUnsignedInt public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedInt>
		<readUnsignedShort public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedShort>
	</class>
	<class path="nme.utils.ByteArray" params="" file="C:\Development\Haxe\nme/nme/utils/ByteArray.hx" extern="1">
		<implements path="nme.utils.IDataInput"/>
		<defaultObjectEncoding public="1" static="1"><c path="Int"/></defaultObjectEncoding>
		<bytesAvailable public="1" set="null"><c path="Int"/></bytesAvailable>
		<endian public="1"><e path="nme.utils.Endian"/></endian>
		<length public="1"><c path="Int"/></length>
		<objectEncoding public="1"><c path="Int"/></objectEncoding>
		<position public="1"><c path="Int"/></position>
		<clear public="1"><f a=""><e path="Void"/></f></clear>
		<compress public="1" set="method"><f a=""><e path="Void"/></f></compress>
		<deflate public="1"><f a=""><e path="Void"/></f></deflate>
		<inflate public="1"><f a=""><e path="Void"/></f></inflate>
		<readBoolean public="1" set="method"><f a=""><e path="Bool"/></f></readBoolean>
		<readByte public="1" set="method"><f a=""><c path="Int"/></f></readByte>
		<readBytes public="1" set="method"><f a="bytes:?offset:?length">
	<c path="nme.utils.ByteArray"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></readBytes>
		<readDouble public="1" set="method"><f a=""><c path="Float"/></f></readDouble>
		<readFloat public="1" set="method"><f a=""><c path="Float"/></f></readFloat>
		<readInt public="1" set="method"><f a=""><c path="Int"/></f></readInt>
		<readMultiByte public="1" set="method"><f a="length:charSet">
	<c path="Int"/>
	<c path="String"/>
	<c path="String"/>
</f></readMultiByte>
		<readObject public="1" set="method"><f a=""><d/></f></readObject>
		<readShort public="1" set="method"><f a=""><c path="Int"/></f></readShort>
		<readUTF public="1" set="method"><f a=""><c path="String"/></f></readUTF>
		<readUTFBytes public="1" set="method"><f a="length">
	<c path="Int"/>
	<c path="String"/>
</f></readUTFBytes>
		<readUnsignedByte public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedByte>
		<readUnsignedInt public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedInt>
		<readUnsignedShort public="1" set="method"><f a=""><c path="Int"/></f></readUnsignedShort>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<uncompress public="1" set="method"><f a=""><e path="Void"/></f></uncompress>
		<writeBoolean public="1" set="method"><f a="value">
	<e path="Bool"/>
	<e path="Void"/>
</f></writeBoolean>
		<writeByte public="1" set="method"><f a="value">
	<c path="Int"/>
	<e path="Void"/>
</f></writeByte>
		<writeBytes public="1" set="method"><f a="bytes:?offset:?length">
	<c path="nme.utils.ByteArray"/>
	<c path="Int"/>
	<c path="Int"/>
	<e path="Void"/>
</f></writeBytes>
		<writeDouble public="1" set="method"><f a="value">
	<c path="Float"/>
	<e path="Void"/>
</f></writeDouble>
		<writeFloat public="1" set="method"><f a="value">
	<c path="Float"/>
	<e path="Void"/>
</f></writeFloat>
		<writeInt public="1" set="method"><f a="value">
	<c path="Int"/>
	<e path="Void"/>
</f></writeInt>
		<writeMultiByte public="1" set="method"><f a="value:charSet">
	<c path="String"/>
	<c path="String"/>
	<e path="Void"/>
</f></writeMultiByte>
		<writeObject public="1" set="method"><f a="object">
	<d/>
	<e path="Void"/>
</f></writeObject>
		<writeShort public="1" set="method"><f a="value">
	<c path="Int"/>
	<e path="Void"/>
</f></writeShort>
		<writeUTF public="1" set="method"><f a="value">
	<c path="String"/>
	<e path="Void"/>
</f></writeUTF>
		<writeUTFBytes public="1" set="method"><f a="value">
	<c path="String"/>
	<e path="Void"/>
</f></writeUTFBytes>
		<writeUnsignedInt public="1" set="method"><f a="value">
	<c path="Int"/>
	<e path="Void"/>
</f></writeUnsignedInt>
		<new public="1" set="method"><f a=""><e path="Void"/></f></new>
	</class>
	<enum path="nme.utils.CompressionAlgorithm" params="" file="C:\Development\Haxe\nme/nme/utils/CompressionAlgorithm.hx">
		<ZLIB/>
		<DEFLATE/>
	</enum>
	<enum path="nme.utils.Endian" params="" file="C:\Development\Haxe\nme/nme/utils/Endian.hx">
		<LITTLE_ENDIAN/>
		<BIG_ENDIAN/>
	</enum>
	<class path="nme.utils.Timer" params="" file="C:\Development\Haxe\nme/nme/utils/Timer.hx" extern="1">
		<extends path="nme.events.EventDispatcher"/>
		<currentCount public="1" set="null"><c path="Int"/></currentCount>
		<delay public="1"><c path="Float"/></delay>
		<repeatCount public="1"><c path="Int"/></repeatCount>
		<running public="1" set="null"><e path="Bool"/></running>
		<reset public="1" set="method"><f a=""><e path="Void"/></f></reset>
		<start public="1" set="method"><f a=""><e path="Void"/></f></start>
		<stop public="1" set="method"><f a=""><e path="Void"/></f></stop>
		<new public="1" set="method"><f a="delay:?repeatCount">
	<c path="Float"/>
	<c path="Int"/>
	<e path="Void"/>
</f></new>
	</class>
	<class path="nme.utils.WeakRef" params="T" file="C:\Development\Haxe\nme/nme/utils/WeakRef.hx" extern="1">
		<get public="1" set="method"><f a=""><c path="nme.utils.WeakRef.T"/></f></get>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method"><f a="inObject:?inMakeWeak">
	<c path="nme.utils.WeakRef.T"/>
	<e path="Bool"/>
	<e path="Void"/>
</f></new>
	</class>
</haxe>